{% import '_includes/forms.twig' as forms %}
{% from '_includes/disclosuremenu.twig' import item as itemMacro %}

{% set id = id ?? "customselect#{random()}" %}
{% set buttonId = buttonId ?? "#{id}-button" %}
{% set menuId = menuId ?? "#{id}-menu" %}
{% set inputId = inputId ?? "#{id}-input" %}
{% set value = value ?? '' %}
{% set disabled = disabled ?? false %}
{% set selectedOption = value ? options|firstWhere(o => o.value == value) : null %}

{% set buttonLabelHtml %}
  <div class="flex flex-nowrap">
    {% if selectedOption.icon ?? false %}
      <div class="cp-icon">{{ iconSvg(selectedOption.icon) }}</div>
    {% endif %}
    <div class="label">{{ selectedOption ? selectedOption.label : defaultButtonLabel ?? 'Choose'|t('app') }}</div>
  </div>
{% endset %}

{% tag 'div' with {
  class: {
    'custom-select': true,
    disabled: disabled,
  }|filter|keys,
  id: id,
}|merge(attributes ?? {}, recursive=true) %}
  {{ forms.button({
    id: buttonId,
    labelHtml: buttonLabelHtml ?? null,
    class: ['menubtn'],
    attributes: buttonAttributes ?? {},
  }) }}

  {% if not disabled %}
    {% tag 'div' with {
      id: menuId,
      class: ['menu']
    }|merge(menuAttributes ?? {}, recursive=true) %}
      <ul class="padded">
        {% for option in options %}
          <li>
            {% tag 'button' with {
              class: {
                'menu-option': true,
                sel: option.value == value,
              }|filter|keys,
              data: {
                value: option.value,
              },
            } %}
              {% if option.icon ?? false %}
                <span class="icon">{{ iconSvg(option.icon) }}</span>
              {% endif %}
              <span class="label">{{ option.label }}</span>
            {% endtag %}
          </li>
        {% endfor %}
      </ul>
    {% endtag %}

    {% if name ?? false %}
      {{ hiddenInput(name, value, {
        id: inputId,
      }) }}
    {% endif %}
  {% endif %}
{% endtag %}

{% if not disabled %}
  {% js %}
    (() => {
      const $button = $('#{{ buttonId|namespaceInputId }}');
      const $buttonFlex = $button.find('.flex');
      const $input = $('#{{ inputId|namespaceInputId }}');
      const menubtn = $button
        .menubtn()
        .data('menubtn');
      menubtn
        .on('optionSelect', (ev) => {
          const $option = $(ev.option);
          const $icon = $option.find('.icon');
          const $label = $option.find('.label');
          let labelHtml = '';
          if ($icon.length) {
            labelHtml += `<div class="cp-icon">${$icon.html()}</div>`;
          }
          labelHtml += `<div class="label">${$label.html()}</div>`;
          $buttonFlex.html(labelHtml);
          $input.val($option.data('value'));
          menubtn.menu.$options.removeClass('sel');
          $option.addClass('sel');
        });
    })();
  {% endjs %}
{% endif %}
