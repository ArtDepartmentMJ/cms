{"version":3,"file":"mfa.js","mappings":"YAAA,IAAWA,IAiFRC,OA9EDC,MAAMC,IAAMC,QAAQC,KAAKC,OACvB,CACEC,mBAAoB,KACpBC,mBAAoB,KACpBC,uBAAwB,KACxBC,uBAAwB,KAExBC,KAAM,SAAUC,GACdC,QAAQC,IAAI,OACZC,KAAKR,mBAAqBP,EAAE,iBAC5Be,KAAKP,mBAAqBR,EAAE,eAC5Be,KAAKN,uBAAyBT,EAAE,oBAChCe,KAAKC,cAAgBD,KAAKN,uBAAuBQ,KAAK,UACtDF,KAAKL,uBAAyBK,KAAKN,uBAAuBQ,KACxD,kCAGFF,KAAKG,YAAYN,EAAUV,MAAMiB,eAAeC,UAEhDL,KAAKM,YAAYN,KAAKP,mBAAoB,SAAU,aACpDO,KAAKM,YAAYN,KAAKC,cAAe,QAAS,aAChD,EAEAM,WAAY,SAAUC,GAAI,WAClBC,EAAmBT,KAAKL,uBAAuBe,MACrDZ,QAAQC,IAAIU,QACaE,IAArBF,GAAkCA,EAAiBG,OAAS,GAC9DzB,MAAM0B,kBAAkB,OAAQb,KAAKH,SAASiB,aAAc,CAC1DC,KAAM,CACJN,iBAAkBA,KAGnBO,MAAK,SAACC,GACL,EAAKzB,mBAAmB0B,KAAK,IAC7B,EAAKxB,uBAAuBwB,KAAK,IAAIC,OAAO,YAC5ChC,MAAMiC,GAAGC,cAAcJ,EAASF,KAAKO,QACvC,IAAE,OACK,SAACC,GACNpC,MAAMiC,GAAGI,aAAaD,EAAEN,SAASF,KAAKO,QACxC,GAEN,EAEAG,UAAW,SAAUjB,GAAI,WACPA,EAAGkB,cAAcC,QAI/BxC,MAAM0B,kBAAkB,OAAQb,KAAKH,SAAS+B,iBAC3CZ,MAAK,SAACC,GACL,IAAIY,EACF,0DACAZ,EAASF,KAAKc,OACd,SACEC,EACF,gCACAb,EAASF,KAAKe,OACd,SACF,EAAKtC,mBAAmB0B,KAAK,IAAIC,OAAOU,GAAQV,OAAOW,EACzD,IAAE,OACK,SAACP,GACNpC,MAAMiC,GAAGI,aAAaD,EAAEN,SAASF,KAAKO,QACxC,IAGFtB,KAAKR,mBAAmB0B,KAAK,GAEjC,IAUJ,IAAI/B,MAAMC,G","sources":["webpack:///./mfa.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.Mfa = Garnish.Base.extend(\n    {\n      $qrSecretContainer: null,\n      $enableMfaCheckbox: null,\n      $verificationContainer: null,\n      $verificationCodeInput: null,\n\n      init: function (settings) {\n        console.log('asd');\n        this.$qrSecretContainer = $('#qr-container');\n        this.$enableMfaCheckbox = $('#requireMfa');\n        this.$verificationContainer = $('#verifyContainer');\n        this.$verifyButton = this.$verificationContainer.find('button');\n        this.$verificationCodeInput = this.$verificationContainer.find(\n          'input[name=\"verificationCode\"]'\n        );\n\n        this.setSettings(settings, Craft.Authentication.defaults);\n\n        this.addListener(this.$enableMfaCheckbox, 'change', 'getQrCode');\n        this.addListener(this.$verifyButton, 'click', 'verifyCode');\n      },\n\n      verifyCode: function (ev) {\n        const verificationCode = this.$verificationCodeInput.val();\n        console.log(verificationCode);\n        if (verificationCode !== undefined && verificationCode.length > 0) {\n          Craft.sendActionRequest('POST', this.settings.verifyAction, {\n            data: {\n              verificationCode: verificationCode,\n            },\n          })\n            .then((response) => {\n              this.$qrSecretContainer.html('');\n              this.$verificationContainer.html('').append('Verified');\n              Craft.cp.displayNotice(response.data.message);\n            })\n            .catch((e) => {\n              Craft.cp.displayError(e.response.data.message);\n            });\n        }\n      },\n\n      getQrCode: function (ev) {\n        let isChecked = ev.currentTarget.checked;\n\n        if (isChecked) {\n          // get qr and secret\n          Craft.sendActionRequest('POST', this.settings.getQrCodeAction)\n            .then((response) => {\n              let secret =\n                '<div class=\"secret\">Secret Key (input without spaces): ' +\n                response.data.secret +\n                '</div>';\n              let qrCode =\n                '<div class=\"qrCode\">QR Code: ' +\n                response.data.qrCode +\n                '</div>';\n              this.$qrSecretContainer.html('').append(secret).append(qrCode);\n            })\n            .catch((e) => {\n              Craft.cp.displayError(e.response.data.message);\n            });\n        } else {\n          // clear out container\n          this.$qrSecretContainer.html('');\n        }\n      },\n    }\n    // {\n    //   defaults: {\n    //     getQrCodeAction: 'mfa/get-qr-code',\n    //     verifyAction: 'mfa/verify',\n    //   },\n    // }\n  );\n\n  new Craft.Mfa();\n})(jQuery);\n"],"names":["$","jQuery","Craft","Mfa","Garnish","Base","extend","$qrSecretContainer","$enableMfaCheckbox","$verificationContainer","$verificationCodeInput","init","settings","console","log","this","$verifyButton","find","setSettings","Authentication","defaults","addListener","verifyCode","ev","verificationCode","val","undefined","length","sendActionRequest","verifyAction","data","then","response","html","append","cp","displayNotice","message","e","displayError","getQrCode","currentTarget","checked","getQrCodeAction","secret","qrCode"],"sourceRoot":""}