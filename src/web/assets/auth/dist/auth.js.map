{"version":3,"file":"auth.js","mappings":"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","sources":["webpack:///./js/RecoveryCodesSetup.js","webpack:///webpack/bootstrap","webpack:///../../../../../node_modules/@simplewebauthn/browser/dist/bundle/index.js","webpack:///./js/Auth2fa.js","webpack:///./js/WebAuthnLogin.js","webpack:///./js/WebAuthnSetup.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.RecoveryCodesSetup = Craft.Auth2fa.extend(\n    {\n      $generateRecoveryCodesBtn: null,\n      $downloadRecoveryCodes: null,\n\n      init: function (slideout, settings) {\n        this.setSettings(settings, Craft.RecoveryCodesSetup.defaults);\n        this.slideout = slideout;\n        this.initSlideout();\n\n        this.$generateRecoveryCodesBtn = this.slideout.$container.find(\n          '#generate-recovery-codes'\n        );\n        this.$downloadRecoveryCodes = this.slideout.$container.find(\n          '#download-recovery-codes'\n        );\n\n        if (this.$generateRecoveryCodesBtn.length) {\n          this.$errors = $('<div class=\"auth-errors\" />').insertAfter(\n            this.$generateRecoveryCodesBtn\n          );\n        }\n\n        this.addListener(\n          this.$generateRecoveryCodesBtn,\n          'click',\n          'onGenerateRecoveryCodesBtn'\n        );\n\n        if (this.$downloadRecoveryCodes.length > 0) {\n          this.addListener(\n            this.$downloadRecoveryCodes,\n            'submit',\n            'onDownloadRecoveryCodesBtn'\n          );\n        }\n      },\n\n      onGenerateRecoveryCodesBtn: function (ev) {\n        if (!$(ev.currentTarget).hasClass('disabled')) {\n          const confirmed = confirm(\n            Craft.t(\n              'app',\n              'Are you sure you want to generate new recovery codes? All current codes will stop working.'\n            )\n          );\n\n          if (confirmed) {\n            this.showStatus(Craft.t('app', 'Waiting for elevated session'), '');\n            Craft.elevatedSessionManager.requireElevatedSession(\n              this.generateRecoveryCodes.bind(this),\n              this.failedElevation.bind(this)\n            );\n          }\n        }\n      },\n\n      onDownloadRecoveryCodesBtn: function (ev) {\n        ev.preventDefault();\n\n        if (!$(ev.currentTarget).hasClass('disabled')) {\n          this.showStatus(Craft.t('app', 'Waiting for elevated session'), '');\n          Craft.elevatedSessionManager.requireElevatedSession(\n            this.downloadRecoveryCodes.bind(this),\n            this.failedElevation.bind(this)\n          );\n        }\n      },\n\n      failedElevation: function () {\n        this.clearStatus();\n      },\n\n      generateRecoveryCodes: function () {\n        this.clearStatus();\n\n        // GET registration options from the endpoint that calls\n        Craft.sendActionRequest('POST', this.settings.generateRecoveryCodes)\n          .then((response) => {\n            this.clearStatus();\n            // Show UI appropriate for the `verified` status\n            if (response.data.verified) {\n              Craft.cp.displaySuccess(\n                Craft.t('app', 'Recovery codes generated.')\n              );\n              if (response.data.html) {\n                this.slideout.$container.html(response.data.html);\n                this.init(this.slideout); //re-initialise the slideout\n              }\n            } else {\n              this.showStatus(Craft.t('app', 'Something went wrong!'));\n            }\n          })\n          .catch(({response}) => {\n            this.showStatus(response.data.message);\n          });\n      },\n\n      downloadRecoveryCodes: function () {\n        this.clearStatus();\n\n        Craft.downloadFromUrl(\n          'POST',\n          Craft.getActionUrl(this.settings.downloadRecoveryCodes),\n          this.$downloadRecoveryCodes.serialize()\n        ).then((response) => {\n          this.clearStatus();\n\n          // Show UI message\n          Craft.cp.displaySuccess(Craft.t('app', 'Recovery codes downloaded.'));\n        });\n      },\n    },\n    {\n      defaults: {\n        downloadRecoveryCodes: 'auth/download-recovery-codes',\n        generateRecoveryCodes: 'auth/generate-recovery-codes',\n      },\n    }\n  );\n})(jQuery);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* [@simplewebauthn/browser@7.1.0] */\nfunction utf8StringToBuffer(value) {\n    return new TextEncoder().encode(value);\n}\n\nfunction bufferToBase64URLString(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let str = '';\n    for (const charCode of bytes) {\n        str += String.fromCharCode(charCode);\n    }\n    const base64String = btoa(str);\n    return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction base64URLStringToBuffer(base64URLString) {\n    const base64 = base64URLString.replace(/-/g, '+').replace(/_/g, '/');\n    const padLength = (4 - (base64.length % 4)) % 4;\n    const padded = base64.padEnd(base64.length + padLength, '=');\n    const binary = atob(padded);\n    const buffer = new ArrayBuffer(binary.length);\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n}\n\nfunction browserSupportsWebAuthn() {\n    return ((window === null || window === void 0 ? void 0 : window.PublicKeyCredential) !== undefined && typeof window.PublicKeyCredential === 'function');\n}\n\nfunction toPublicKeyCredentialDescriptor(descriptor) {\n    const { id } = descriptor;\n    return {\n        ...descriptor,\n        id: base64URLStringToBuffer(id),\n        transports: descriptor.transports,\n    };\n}\n\nfunction isValidDomain(hostname) {\n    return (hostname === 'localhost' || /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname));\n}\n\nclass WebAuthnError extends Error {\n    constructor(message, name = 'WebAuthnError') {\n        super(message);\n        this.name = name;\n    }\n}\n\nfunction identifyRegistrationError({ error, options, }) {\n    var _a, _b;\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal === new AbortController().signal) {\n            return new WebAuthnError('Registration ceremony was sent an abort signal', 'AbortError');\n        }\n    }\n    else if (error.name === 'ConstraintError') {\n        if (((_a = publicKey.authenticatorSelection) === null || _a === void 0 ? void 0 : _a.requireResidentKey) === true) {\n            return new WebAuthnError('Discoverable credentials were required but no available authenticator supported it', 'ConstraintError');\n        }\n        else if (((_b = publicKey.authenticatorSelection) === null || _b === void 0 ? void 0 : _b.userVerification) === 'required') {\n            return new WebAuthnError('User verification was required but no available authenticator supported it', 'ConstraintError');\n        }\n    }\n    else if (error.name === 'InvalidStateError') {\n        return new WebAuthnError('The authenticator was previously registered', 'InvalidStateError');\n    }\n    else if (error.name === 'NotAllowedError') ;\n    else if (error.name === 'NotSupportedError') {\n        const validPubKeyCredParams = publicKey.pubKeyCredParams.filter(param => param.type === 'public-key');\n        if (validPubKeyCredParams.length === 0) {\n            return new WebAuthnError('No entry in pubKeyCredParams was of type \"public-key\"', 'NotSupportedError');\n        }\n        return new WebAuthnError('No available authenticator supported any of the specified pubKeyCredParams algorithms', 'NotSupportedError');\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError(`${window.location.hostname} is an invalid domain`, 'SecurityError');\n        }\n        else if (publicKey.rp.id !== effectiveDomain) {\n            return new WebAuthnError(`The RP ID \"${publicKey.rp.id}\" is invalid for this domain`, 'SecurityError');\n        }\n    }\n    else if (error.name === 'TypeError') {\n        if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n            return new WebAuthnError('User ID was not between 1 and 64 characters', 'TypeError');\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError('The authenticator was unable to process the specified options, or could not create a new credential', 'UnknownError');\n    }\n    return error;\n}\n\nclass WebAuthnAbortService {\n    createNewAbortSignal() {\n        if (this.controller) {\n            this.controller.abort('Cancelling existing WebAuthn API call for new one');\n        }\n        const newController = new AbortController();\n        this.controller = newController;\n        return newController.signal;\n    }\n}\nconst webauthnAbortService = new WebAuthnAbortService();\n\nconst attachments = ['cross-platform', 'platform'];\nfunction toAuthenticatorAttachment(attachment) {\n    if (!attachment) {\n        return;\n    }\n    if (attachments.indexOf(attachment) < 0) {\n        return;\n    }\n    return attachment;\n}\n\nasync function startRegistration(creationOptionsJSON) {\n    var _a;\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    const publicKey = {\n        ...creationOptionsJSON,\n        challenge: base64URLStringToBuffer(creationOptionsJSON.challenge),\n        user: {\n            ...creationOptionsJSON.user,\n            id: utf8StringToBuffer(creationOptionsJSON.user.id),\n        },\n        excludeCredentials: (_a = creationOptionsJSON.excludeCredentials) === null || _a === void 0 ? void 0 : _a.map(toPublicKeyCredentialDescriptor),\n    };\n    const options = { publicKey };\n    options.signal = webauthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.create(options));\n    }\n    catch (err) {\n        throw identifyRegistrationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Registration was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let transports = undefined;\n    if (typeof response.getTransports === 'function') {\n        transports = response.getTransports();\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            attestationObject: bufferToBase64URLString(response.attestationObject),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            transports,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nfunction bufferToUTF8String(value) {\n    return new TextDecoder('utf-8').decode(value);\n}\n\nasync function browserSupportsWebAuthnAutofill() {\n    const globalPublicKeyCredential = window.PublicKeyCredential;\n    return (globalPublicKeyCredential.isConditionalMediationAvailable !== undefined &&\n        globalPublicKeyCredential.isConditionalMediationAvailable());\n}\n\nfunction identifyAuthenticationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal === new AbortController().signal) {\n            return new WebAuthnError('Authentication ceremony was sent an abort signal', 'AbortError');\n        }\n    }\n    else if (error.name === 'NotAllowedError') ;\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError(`${window.location.hostname} is an invalid domain`, 'SecurityError');\n        }\n        else if (publicKey.rpId !== effectiveDomain) {\n            return new WebAuthnError(`The RP ID \"${publicKey.rpId}\" is invalid for this domain`, 'SecurityError');\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError('The authenticator was unable to process the specified options, or could not create a new assertion signature', 'UnknownError');\n    }\n    return error;\n}\n\nasync function startAuthentication(requestOptionsJSON, useBrowserAutofill = false) {\n    var _a, _b;\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    let allowCredentials;\n    if (((_a = requestOptionsJSON.allowCredentials) === null || _a === void 0 ? void 0 : _a.length) !== 0) {\n        allowCredentials = (_b = requestOptionsJSON.allowCredentials) === null || _b === void 0 ? void 0 : _b.map(toPublicKeyCredentialDescriptor);\n    }\n    const publicKey = {\n        ...requestOptionsJSON,\n        challenge: base64URLStringToBuffer(requestOptionsJSON.challenge),\n        allowCredentials,\n    };\n    const options = {};\n    if (useBrowserAutofill) {\n        if (!(await browserSupportsWebAuthnAutofill())) {\n            throw Error('Browser does not support WebAuthn autofill');\n        }\n        const eligibleInputs = document.querySelectorAll(\"input[autocomplete*='webauthn']\");\n        if (eligibleInputs.length < 1) {\n            throw Error('No <input> with `\"webauthn\"` in its `autocomplete` attribute was detected');\n        }\n        options.mediation = 'conditional';\n        publicKey.allowCredentials = [];\n    }\n    options.publicKey = publicKey;\n    options.signal = webauthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.get(options));\n    }\n    catch (err) {\n        throw identifyAuthenticationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Authentication was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let userHandle = undefined;\n    if (response.userHandle) {\n        userHandle = bufferToUTF8String(response.userHandle);\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            authenticatorData: bufferToBase64URLString(response.authenticatorData),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            signature: bufferToBase64URLString(response.signature),\n            userHandle,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nasync function platformAuthenticatorIsAvailable() {\n    if (!browserSupportsWebAuthn()) {\n        return false;\n    }\n    return PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\n\nexport { browserSupportsWebAuthn, browserSupportsWebAuthnAutofill, platformAuthenticatorIsAvailable, startAuthentication, startRegistration };\n","import {browserSupportsWebAuthn} from '@simplewebauthn/browser';\n\n(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.Auth2fa = Garnish.Base.extend(\n    {\n      $auth2faLoginFormContainer: null,\n      $auth2faSetupFormContainer: null,\n      $alternative2faLink: null,\n      $alternative2faTypesContainer: null,\n      $viewSetupBtns: null,\n      $errors: null,\n\n      slideout: null,\n      $removeSetupButton: null,\n      $closeButton: null,\n      $verifyButton: null,\n\n      init: function (settings) {\n        this.setSettings(settings, Craft.Auth2fa.defaults);\n\n        this.$auth2faLoginFormContainer = $('#auth-2fa-form');\n        this.$auth2faSetupFormContainer = $('#auth-2fa-setup');\n        this.$viewSetupBtns = this.$auth2faSetupFormContainer.find(\n          'button.auth-2fa-view-setup'\n        );\n        this.$errors = $('#login-errors');\n\n        this.addListener(this.$viewSetupBtns, 'click', 'onViewSetupBtnClick');\n      },\n\n      show2faForm: function (auth2faForm, $loginDiv) {\n        this.$auth2faLoginFormContainer.html('').append(auth2faForm);\n        $loginDiv.addClass('auth-2fa');\n        $('#login-form-buttons').hide();\n\n        const $submitBtn = this.$auth2faLoginFormContainer.find('.submit');\n\n        this.connectAlternative2fa();\n        this.onSubmitResponse($submitBtn);\n      },\n\n      getCurrent2faType: function ($container) {\n        let currentMethod = $container.attr('data-2fa-type');\n\n        if (currentMethod === undefined) {\n          currentMethod = null;\n        }\n\n        return currentMethod;\n      },\n\n      initSlideout: function () {\n        this.$closeButton = this.slideout.$container.find('button.close');\n        this.$verifyButton = this.slideout.$container.find('#auth2fa-verify');\n        this.$removeSetupButton = this.slideout.$container.find(\n          '#auth-2fa-remove-setup'\n        );\n        if (this.$verifyButton.length) {\n          this.$errors = $('<div class=\"auth-errors\" />').insertAfter(\n            this.$verifyButton\n          );\n        } else {\n          this.$errors = this.slideout.$container.find('.so-notice');\n        }\n\n        this.addListener(this.$removeSetupButton, 'click', 'onRemoveSetup');\n        this.addListener(this.$closeButton, 'click', 'onClickClose');\n        this.addListener(this.$verifyButton, 'click', 'onVerify');\n        this.addListener(this.slideout.$container, 'keypress', (ev) => {\n          if (ev.keyCode === Garnish.RETURN_KEY) {\n            this.$verifyButton.trigger('click');\n          }\n        });\n      },\n\n      onViewSetupBtnClick: function (ev) {\n        const $button = $(ev.currentTarget);\n        $button.disable();\n        ev.preventDefault();\n\n        const data = {\n          selectedMethod: this.getCurrent2faType($button),\n        };\n\n        Craft.sendActionRequest('POST', this.settings.setupSlideoutHtml, {data})\n          .then((response) => {\n            this.slideout = new Craft.Slideout(response.data.html);\n\n            if (\n              data.selectedMethod === 'craft\\\\auth\\\\type\\\\WebAuthn' &&\n              browserSupportsWebAuthn()\n            ) {\n              new Craft.WebAuthnSetup(this.slideout, this.settings);\n            } else if (\n              data.selectedMethod === 'craft\\\\auth\\\\type\\\\RecoveryCodes'\n            ) {\n              new Craft.RecoveryCodesSetup(this.slideout, this.settings);\n            } else {\n              // for any other auth methods, just make sure we re-initialised the slideout vars\n              this.initSlideout();\n            }\n\n            this.slideout.on('close', (ev) => {\n              this.$removeSetupButton = null;\n              this.slideout = null;\n              $button.enable();\n            });\n          })\n          .catch(({response}) => {\n            // Add the error message\n            Craft.cp.displayError(response.data.message);\n            $button.enable();\n          });\n      },\n\n      onClickClose: function (ev) {\n        this.slideout.close();\n      },\n\n      onRemoveSetup: function (ev) {\n        ev.preventDefault();\n\n        let currentMethod = this.getCurrent2faType(\n          this.slideout.$container.find('#setup-form-2fa')\n        );\n\n        if (currentMethod === undefined) {\n          currentMethod = null;\n        }\n\n        let data = {\n          currentMethod: currentMethod,\n        };\n\n        const confirmed = confirm(\n          Craft.t('app', 'Are you sure you want to delete this setup?')\n        );\n\n        if (confirmed) {\n          Craft.sendActionRequest('POST', this.settings.removeSetup, {data})\n            .then((response) => {\n              $(ev.currentTarget).remove();\n              Craft.cp.displayNotice(Craft.t('app', '2FA setup removed.'));\n            })\n            .catch((e) => {\n              Craft.cp.displayError(e.response.data.message);\n            })\n            .finally(() => {\n              this.slideout.close();\n            });\n        }\n      },\n\n      onVerify: function (ev) {\n        ev.preventDefault();\n\n        const $submitBtn = this.slideout.$container.find('#auth2fa-verify');\n\n        $submitBtn.addClass('loading');\n\n        let data = {\n          auth2faFields: {},\n          currentMethod: null,\n        };\n\n        data.auth2faFields = this._get2faFields(this.slideout.$container);\n        data.currentMethod = this._getCurrentMethodInput(\n          this.slideout.$container\n        );\n\n        Craft.sendActionRequest('POST', this.settings.saveSetup, {data})\n          .then((response) => {\n            this.onSubmitResponse($submitBtn);\n            Craft.cp.displayNotice(Craft.t('app', '2FA settings saved.'));\n            this.slideout.close();\n          })\n          .catch(({response}) => {\n            this.onSubmitResponse($submitBtn);\n\n            // Add the error message\n            this.showStatus(response.data.message);\n            Craft.cp.displayError(response.data.message);\n          });\n      },\n\n      onSubmitResponse: function ($submitBtn) {\n        $submitBtn.removeClass('loading');\n      },\n\n      showStatus: function (message, type = 'error') {\n        this.clearStatus();\n\n        if (type == 'error') {\n          this.$errors.addClass('error');\n        } else {\n          this.$errors.removeClass('error');\n        }\n        this.$errors.text(message);\n      },\n\n      clearStatus: function ($errorsContainer = null) {\n        if ($errorsContainer !== null) {\n          $errorsContainer.empty();\n        } else {\n          this.$errors.empty();\n        }\n      },\n\n      verify2faCode: function ($auth2faLoginFormContainer, inModal = false) {\n        let data = {\n          auth2faFields: {},\n          currentMethod: null,\n        };\n\n        data.auth2faFields = this._get2faFields($auth2faLoginFormContainer);\n        data.currentMethod = this._getCurrentMethodInput(\n          $auth2faLoginFormContainer\n        );\n\n        return Craft.sendActionRequest('POST', 'users/verify-2fa', {data})\n          .then((response) => {\n            if (inModal) {\n              return Promise.resolve({success: true});\n            } else {\n              return Promise.resolve({\n                success: true,\n                returnUrl: response.data.returnUrl,\n              });\n            }\n          })\n          .catch(({response}) => {\n            return Promise.reject({\n              success: false,\n              error: response.data.message,\n            });\n          });\n      },\n\n      onAlternative2faTypeClick: function (event) {\n        this.clearStatus();\n\n        let $btn = $(event.currentTarget);\n        $btn.attr('disabled', true).disable();\n\n        // get current authenticator class via data-2fa-type\n        let currentMethod = this.getCurrent2faType(\n          this.$auth2faLoginFormContainer.find('#verifyContainer')\n        );\n        if (currentMethod === null) {\n          this.$alternative2faLink.hide();\n          this.showStatus(\n            Craft.t('app', 'No alternative 2FA methods available.')\n          );\n        }\n\n        let data = {\n          currentMethod: currentMethod,\n        };\n\n        // get available 2FA methods, minus the one that's being shown\n        this.getAlternative2faTypes(data, $btn);\n      },\n\n      getAlternative2faTypes: function (data, $btn) {\n        Craft.sendActionRequest(\n          'POST',\n          this.settings.fetchAlternative2faTypes,\n          {\n            data,\n          }\n        )\n          .then((response) => {\n            if (response.data.alternativeTypes !== undefined) {\n              this.showAlternative2faTypes(response.data.alternativeTypes);\n            }\n          })\n          .catch(({response}) => {\n            this.showStatus(response.data.message);\n          })\n          .finally(() => {\n            $btn.attr('disabled', false).enable();\n          });\n      },\n\n      showAlternative2faTypes: function (data) {\n        this.$alternative2faTypesContainer.empty();\n        let alternativeTypes = Object.entries(data).map(([key, value]) => ({\n          key,\n          value,\n        }));\n        if (alternativeTypes.length > 0) {\n          alternativeTypes.forEach((type) => {\n            this.$alternative2faTypesContainer.append(\n              '<li><button ' +\n                'class=\"alternative-2fa-type\" ' +\n                'type=\"button\" ' +\n                'value=\"' +\n                type.key +\n                '\">' +\n                type.value.name +\n                '</button></li>'\n            );\n          });\n        } else {\n          this.showStatus(\n            Craft.t('app', 'No alternative 2FA methods available.')\n          );\n        }\n\n        // list them by name\n        this.$alternative2faLink\n          .hide()\n          .after(this.$alternative2faTypesContainer);\n\n        // clicking on a method name swaps the form fields\n        this.addListener(\n          $('.alternative-2fa-type'),\n          'click',\n          'onSelectAlternative2faType'\n        );\n      },\n\n      onSelectAlternative2faType: function (event) {\n        let $btn = $(event.currentTarget);\n        $btn.attr('disabled', true).disable();\n\n        const data = {\n          selectedMethod: $(event.currentTarget).attr('value'),\n        };\n\n        Craft.sendActionRequest('POST', this.settings.loadAlternative2faType, {\n          data,\n        })\n          .then((response) => {\n            if (response.data.auth2faForm !== undefined) {\n              this.$auth2faLoginFormContainer\n                .html('')\n                .append(response.data.auth2faForm);\n\n              this.connectAlternative2fa();\n              this.onSubmitResponse();\n            }\n          })\n          .catch(({response}) => {\n            //this.showStatus(response.data.message);\n          })\n          .finally(() => {\n            $btn.attr('disabled', false).enable();\n          });\n      },\n\n      connectAlternative2fa: function () {\n        this.$alternative2faLink =\n          this.$auth2faLoginFormContainer.find('#alternative-2fa');\n        this.$alternative2faTypesContainer =\n          this.$auth2faLoginFormContainer.find('#alternative-2fa-types');\n        this.addListener(\n          this.$alternative2faLink,\n          'click',\n          'onAlternative2faTypeClick'\n        );\n      },\n\n      _get2faFields: function ($container) {\n        let auth2faFields = {};\n\n        $container\n          .find('input[name^=\"auth2faFields[')\n          .each(function (index, element) {\n            let name = $(element).attr('id');\n            auth2faFields[name] = $(element).val();\n          });\n\n        return auth2faFields;\n      },\n\n      _getCurrentMethodInput: function ($container) {\n        return $container.find('input[name=\"currentMethod\"').val();\n      },\n    },\n    {\n      defaults: {\n        fetchAlternative2faTypes: 'auth/fetch-alternative-2fa-types',\n        loadAlternative2faType: 'auth/load-alternative-2fa-type',\n        setupSlideoutHtml: 'auth/setup-slideout-html',\n        saveSetup: 'auth/save-setup',\n        removeSetup: 'auth/remove-setup',\n      },\n    }\n  );\n})(jQuery);\n","import {\n  browserSupportsWebAuthn,\n  platformAuthenticatorIsAvailable,\n  startAuthentication,\n} from '@simplewebauthn/browser';\n\n(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.WebAuthnLogin = Garnish.Base.extend({\n    $submitBtn: null,\n    $errors: null,\n\n    init: function () {\n      this.$submitBtn = $('#webauthn-login');\n      this.$errors = $('#login-errors');\n\n      if (!browserSupportsWebAuthn()) {\n        this.$submitBtn.remove();\n      } else {\n        // \"FIDO2 and WebAuthn support two types of authenticators, platform authenticators and roaming authenticators.\n        // Platform Authenticators are authentication mechanisms built into devices. This could include things like Windows Hello, Apple's Touch ID or Face ID.\n        // Roaming Authenticators are separate authentication hardware keys like Yubikeys or Google's Titan Keys.\"\n        // @link: https://www.twilio.com/blog/detect-browser-support-webauthn\n        // e.g. Firefox supports Platform Authenticators on Windows but not on macOS.\n        platformAuthenticatorIsAvailable()\n          .then((response) => {\n            if (!response) {\n              this.$submitBtn.remove();\n            }\n          })\n          .catch((error) => {\n            this.showError(error);\n          })\n          .finally(() => {\n            if (this.$submitBtn !== null) {\n              this.addListener(this.$submitBtn, 'click', 'login');\n\n              this.$submitBtn = new Garnish.MultiFunctionBtn(this.$submitBtn, {\n                changeButtonText: true,\n              });\n            }\n            if ($('.alternative-login-methods').find('.btn').length == 0) {\n              $('.alternative-login-methods').remove();\n            }\n          });\n      }\n    },\n\n    login: function (ev) {\n      ev.preventDefault();\n\n      this.$submitBtn.busyEvent();\n      this.clearErrors();\n\n      this.startAuthentication(true, false, 'login')\n        .then((response) => {\n          this.$submitBtn.successEvent();\n          if (response.returnUrl != undefined) {\n            window.location.href = response.returnUrl;\n          }\n        })\n        .catch((response) => {\n          this.$submitBtn.failureEvent();\n          this.processFailure(response);\n        });\n    },\n\n    startAuthentication: function (\n      usernameless = false,\n      inModal = false,\n      action = 'login'\n    ) {\n      let data = {\n        usernameless: usernameless,\n      };\n      return Craft.sendActionRequest('POST', 'users/start-webauthn-login', {\n        data,\n      })\n        .then((response) => {\n          const authenticationOptions = response.data.authenticationOptions;\n\n          try {\n            return startAuthentication(authenticationOptions)\n              .then((authResponse) => {\n                return Promise.resolve(\n                  this.verifyAuthentication(\n                    authenticationOptions,\n                    authResponse,\n                    inModal,\n                    action\n                  )\n                );\n              })\n              .catch((authResponseError) => {\n                return Promise.reject(authResponseError);\n              });\n          } catch (error) {\n            return Promise.reject(error);\n          }\n        })\n        .catch((response) => {\n          return Promise.reject(response);\n        });\n    },\n\n    verifyAuthentication: function (\n      authenticationOptions,\n      authResponse,\n      inModal,\n      action\n    ) {\n      let data = {\n        authenticationOptions: JSON.stringify(authenticationOptions),\n        authResponse: JSON.stringify(authResponse),\n      };\n\n      let actionUrl = 'users/webauthn-verify';\n\n      if (action == 'elevateSessionWebAuthn') {\n        actionUrl = 'users/start-elevated-session';\n        data['passwordless'] = true;\n        data['passwordlessMethod'] = 'WebAuthn';\n      }\n\n      return Craft.sendActionRequest('POST', actionUrl, {data})\n        .then((response) => {\n          if (inModal) {\n            return Promise.resolve({success: true});\n          } else {\n            return Promise.resolve({\n              success: true,\n              returnUrl: response.data.returnUrl,\n            });\n          }\n        })\n        .catch(({response}) => {\n          return Promise.reject(response.data.message);\n        });\n    },\n\n    processFailure: function (error) {\n      // Add the error message\n      this.showError(error);\n      this.$submitBtn.failureEvent();\n    },\n\n    showError: function (error) {\n      this.clearErrors();\n\n      $('<p style=\"display: none;\">' + error + '</p>')\n        .appendTo(this.$errors)\n        .velocity('fadeIn');\n    },\n\n    clearErrors: function () {\n      this.$errors.empty();\n    },\n  });\n\n  new Craft.WebAuthnLogin();\n})(jQuery);\n","import {\n  browserSupportsWebAuthn,\n  platformAuthenticatorIsAvailable,\n} from '@simplewebauthn/browser';\nimport {startRegistration} from '@simplewebauthn/browser';\n\n(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.WebAuthnSetup = Craft.Auth2fa.extend(\n    {\n      $addSecurityKeyBtn: null,\n      $keysTable: null,\n\n      init: function (slideout, settings) {\n        this.setSettings(settings, Craft.WebAuthnSetup.defaults);\n        this.slideout = slideout;\n        this.initSlideout();\n\n        this.$addSecurityKeyBtn = $('#add-security-key');\n        this.$keysTable = this.slideout.$container.find(\n          '#webauthn-security-keys'\n        );\n\n        if (this.$addSecurityKeyBtn.length) {\n          this.$errors = $('<div class=\"auth-errors\" />').insertAfter(\n            this.$addSecurityKeyBtn\n          );\n        }\n\n        if (!browserSupportsWebAuthn()) {\n          Craft.cp.displayNotice(\n            Craft.t('app', 'This browser does not support WebAuthn.')\n          );\n          this.$addSecurityKeyBtn.remove();\n        } else {\n          platformAuthenticatorIsAvailable()\n            .then((response) => {\n              if (!response) {\n                Craft.cp.displayNotice(\n                  Craft.t('app', 'This browser does not support WebAuthn.')\n                );\n                this.$addSecurityKeyBtn.remove();\n              }\n            })\n            .catch((error) => {\n              this.showError(error);\n            })\n            .finally(() => {\n              if (this.$addSecurityKeyBtn !== null) {\n                this.addListener(\n                  this.$addSecurityKeyBtn,\n                  'click',\n                  'onAddSecurityKeyBtn'\n                );\n              }\n            });\n        }\n\n        if (this.$keysTable !== null) {\n          this.addListener(\n            this.$keysTable.find('.delete'),\n            'click',\n            'onDeleteSecurityKey'\n          );\n        }\n      },\n\n      onAddSecurityKeyBtn: function (ev) {\n        if (!$(ev.currentTarget).hasClass('disabled')) {\n          $(ev.currentTarget).disable();\n          this.showStatus(Craft.t('app', 'Waiting for elevated session'), '');\n          Craft.elevatedSessionManager.requireElevatedSession(\n            this.startRegistration.bind(this),\n            this.failedElevation.bind(this)\n          );\n        }\n      },\n\n      failedElevation: function () {\n        this.$addSecurityKeyBtn.enable();\n        this.clearStatus();\n      },\n\n      startRegistration: function () {\n        this.clearStatus();\n\n        // GET registration options from the endpoint that calls\n        Craft.sendActionRequest(\n          'POST',\n          this.settings.generateRegistrationOptions\n        )\n          .then((response) => {\n            const registrationOptions = response.data.registrationOptions;\n            try {\n              this.showStatus(Craft.t('app', 'Starting registration'), '');\n              let defaultName =\n                this._getBrowser() + ' on ' + this._getPlatformName();\n              const credentialName = Craft.escapeHtml(\n                prompt(\n                  Craft.t('app', 'Please enter a name for the security key'),\n                  defaultName\n                )\n              );\n              startRegistration(registrationOptions)\n                .then((regResponse) => {\n                  this.verifyRegistration(regResponse, credentialName);\n                })\n                .catch((regResponseError) => {\n                  this.showStatus(\n                    Craft.t('app', 'Registration failed:') +\n                      ' ' +\n                      regResponseError.message\n                  );\n                  this.$addSecurityKeyBtn.enable();\n                });\n            } catch (error) {\n              this.showStatus(error);\n              this.$addSecurityKeyBtn.enable();\n            }\n          })\n          .catch(({response}) => {\n            this.showStatus(response.data.message);\n            this.$addSecurityKeyBtn.enable();\n          });\n      },\n\n      verifyRegistration: function (startRegistrationResponse, credentialName) {\n        this.showStatus(Craft.t('app', 'Starting verification'), '');\n        let data = {\n          credentials: JSON.stringify(startRegistrationResponse),\n          credentialName: credentialName,\n        };\n\n        // POST the response to the endpoint\n        Craft.sendActionRequest('POST', this.settings.verifyRegistration, {\n          data,\n        })\n          .then((response) => {\n            this.clearStatus();\n            // Show UI appropriate for the `verified` status\n            if (response.data.verified) {\n              Craft.cp.displaySuccess(\n                Craft.t('app', 'Security key registered.')\n              );\n              if (response.data.html) {\n                this.slideout.$container.html(response.data.html);\n                this.init(this.slideout); //re-initialise slideout\n              }\n            } else {\n              this.showStatus(Craft.t('app', 'Something went wrong!'));\n            }\n          })\n          .catch(({response}) => {\n            this.showStatus(response.data.message);\n          })\n          .finally(() => {\n            this.$addSecurityKeyBtn.enable();\n          });\n      },\n\n      onDeleteSecurityKey: function (ev) {\n        ev.preventDefault();\n\n        const $uid = $(ev.currentTarget).attr('data-uid');\n        const credentialName = $(ev.currentTarget)\n          .parents('tr')\n          .find('[data-name=\"credentialName\"]')\n          .text();\n\n        let data = {\n          uid: $uid,\n        };\n\n        const confirmed = confirm(\n          Craft.t(\n            'app',\n            'Are you sure you want to delete ‘{credentialName}‘ security key?',\n            {credentialName: credentialName}\n          )\n        );\n\n        if ($uid !== undefined && confirmed) {\n          Craft.sendActionRequest('POST', this.settings.deleteSecurityKey, {\n            data,\n          })\n            .then((response) => {\n              Craft.cp.displaySuccess(response.data.message);\n              if (response.data.html) {\n                this.slideout.$container.html(response.data.html);\n                this.init(this.slideout); //re-initialise slideout\n              }\n            })\n            .catch(({response}) => {\n              this.showStatus(response.data.message);\n            });\n        }\n      },\n\n      _getPlatformName: function () {\n        let platform = navigator.platform;\n\n        if (platform.indexOf('Mac') != -1) {\n          platform = 'Mac';\n        } else if (\n          platform.indexOf('iPhone') != -1 ||\n          platform.indexOf('Pike')\n        ) {\n          platform = 'iPhone';\n        } else if (platform.indexOf('iPad') != -1) {\n          platform = 'iPad';\n        } else if (platform.indexOf('iPod') != -1) {\n          platform = 'iPod';\n        } else if (platform.indexOf('FreeBSD') != -1) {\n          platform = 'FreeBSD';\n        } else if (platform.indexOf('Linux') != -1) {\n          platform = 'Linux';\n        } else if (platform.indexOf('Win') != -1) {\n          platform = 'Windows';\n        } else if (platform.indexOf('Nintendo') != -1) {\n          platform = 'Nintendo';\n        } else if (platform.indexOf('SunOS') != -1) {\n          platform = 'Solaris';\n        }\n        // in other cases - just use the full name returned by navigator.platform\n\n        return platform;\n      },\n\n      _getBrowser: function () {\n        let userAgent = navigator.userAgent;\n        let browser = '';\n\n        if (userAgent.match(/chrome|chromium|crios/i)) {\n          browser = 'Chrome';\n        } else if (userAgent.match(/firefox|fxios/i)) {\n          browser = 'Firefox';\n        } else if (userAgent.match(/safari/i)) {\n          browser = 'Safari';\n        } else if (userAgent.match(/opr\\//i)) {\n          browser = 'Opera';\n        } else if (userAgent.match(/edg/i)) {\n          browser = 'Edge';\n        } else if (userAgent.match(/trident/i)) {\n          browser = 'IE';\n        } else {\n          browser = 'Browser';\n        }\n\n        return browser;\n      },\n    },\n    {\n      defaults: {\n        generateRegistrationOptions: 'auth/generate-registration-options',\n        verifyRegistration: 'auth/verify-registration',\n        deleteSecurityKey: 'auth/delete-security-key',\n      },\n    }\n  );\n})(jQuery);\n"],"names":["$","jQuery","Craft","RecoveryCodesSetup","Auth2fa","extend","$generateRecoveryCodesBtn","$downloadRecoveryCodes","init","slideout","settings","this","setSettings","defaults","initSlideout","$container","find","length","$errors","insertAfter","addListener","onGenerateRecoveryCodesBtn","ev","currentTarget","hasClass","confirm","t","showStatus","elevatedSessionManager","requireElevatedSession","generateRecoveryCodes","bind","failedElevation","onDownloadRecoveryCodesBtn","preventDefault","downloadRecoveryCodes","clearStatus","sendActionRequest","then","response","data","verified","cp","displaySuccess","html","message","downloadFromUrl","getActionUrl","serialize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","bufferToBase64URLString","buffer","bytes","Uint8Array","str","charCode","String","fromCharCode","btoa","replace","base64URLStringToBuffer","base64URLString","base64","padLength","padded","padEnd","binary","atob","ArrayBuffer","i","charCodeAt","browserSupportsWebAuthn","window","PublicKeyCredential","toPublicKeyCredentialDescriptor","descriptor","id","transports","isValidDomain","hostname","test","WebAuthnError","Error","constructor","name","super","webauthnAbortService","createNewAbortSignal","controller","abort","newController","AbortController","signal","attachments","toAuthenticatorAttachment","attachment","indexOf","async","requestOptionsJSON","useBrowserAutofill","_a","_b","allowCredentials","map","publicKey","challenge","options","globalPublicKeyCredential","isConditionalMediationAvailable","browserSupportsWebAuthnAutofill","document","querySelectorAll","mediation","credential","navigator","credentials","get","err","error","effectiveDomain","location","rpId","identifyAuthenticationError","rawId","type","userHandle","value","TextDecoder","decode","authenticatorData","clientDataJSON","signature","clientExtensionResults","getClientExtensionResults","authenticatorAttachment","platformAuthenticatorIsAvailable","isUserVerifyingPlatformAuthenticatorAvailable","Garnish","Base","$auth2faLoginFormContainer","$auth2faSetupFormContainer","$alternative2faLink","$alternative2faTypesContainer","$viewSetupBtns","$removeSetupButton","$closeButton","$verifyButton","show2faForm","auth2faForm","$loginDiv","append","addClass","hide","$submitBtn","connectAlternative2fa","onSubmitResponse","getCurrent2faType","currentMethod","attr","keyCode","RETURN_KEY","trigger","onViewSetupBtnClick","$button","disable","selectedMethod","setupSlideoutHtml","Slideout","WebAuthnSetup","on","enable","displayError","onClickClose","close","onRemoveSetup","removeSetup","remove","displayNotice","e","onVerify","auth2faFields","_get2faFields","_getCurrentMethodInput","saveSetup","removeClass","text","$errorsContainer","empty","verify2faCode","inModal","Promise","resolve","success","returnUrl","reject","onAlternative2faTypeClick","event","$btn","getAlternative2faTypes","fetchAlternative2faTypes","alternativeTypes","showAlternative2faTypes","Object","entries","key","forEach","after","onSelectAlternative2faType","loadAlternative2faType","each","index","element","val","WebAuthnLogin","showError","MultiFunctionBtn","changeButtonText","login","busyEvent","clearErrors","startAuthentication","successEvent","href","failureEvent","processFailure","usernameless","action","authenticationOptions","authResponse","verifyAuthentication","authResponseError","JSON","stringify","actionUrl","appendTo","velocity","$addSecurityKeyBtn","$keysTable","onAddSecurityKeyBtn","startRegistration","generateRegistrationOptions","registrationOptions","defaultName","_getBrowser","_getPlatformName","credentialName","escapeHtml","prompt","creationOptionsJSON","user","TextEncoder","encode","excludeCredentials","create","authenticatorSelection","requireResidentKey","userVerification","pubKeyCredParams","filter","param","rp","byteLength","identifyRegistrationError","getTransports","attestationObject","regResponse","verifyRegistration","regResponseError","startRegistrationResponse","onDeleteSecurityKey","$uid","parents","uid","confirmed","deleteSecurityKey","platform","userAgent","match"],"sourceRoot":""}