{"version":3,"file":"auth.js","mappings":"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","sources":["webpack:///./js/RecoveryCodesSetup.js","webpack:///webpack/bootstrap","webpack:///../../../../../node_modules/@simplewebauthn/browser/dist/bundle/index.js","webpack:///./js/Auth2fa.js","webpack:///./js/Auth2faLogin.js","webpack:///./js/WebAuthnSetup.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.RecoveryCodesSetup = Craft.Auth2fa.extend(\n    {\n      $generateRecoveryCodesBtn: null,\n      $downloadRecoveryCodes: null,\n\n      init: function (slideout, settings) {\n        this.setSettings(settings, Craft.RecoveryCodesSetup.defaults);\n        this.slideout = slideout;\n        this.initSlideout();\n\n        this.$generateRecoveryCodesBtn = this.slideout.$container.find(\n          '#generate-recovery-codes'\n        );\n        this.$downloadRecoveryCodes = this.slideout.$container.find(\n          '#download-recovery-codes'\n        );\n\n        this.addListener(\n          this.$generateRecoveryCodesBtn,\n          'click',\n          'onGenerateRecoveryCodesBtn'\n        );\n\n        if (this.$downloadRecoveryCodes.length > 0) {\n          this.addListener(\n            this.$downloadRecoveryCodes,\n            'submit',\n            'onDownloadRecoveryCodesBtn'\n          );\n        }\n      },\n\n      onGenerateRecoveryCodesBtn: function (ev) {\n        if (!$(ev.currentTarget).hasClass('disabled')) {\n          const confirmed = confirm(\n            Craft.t(\n              'app',\n              'Are you sure you want to generate new recovery codes? All current codes will stop working.'\n            )\n          );\n\n          if (confirmed) {\n            this.showStatus(Craft.t('app', 'Waiting for elevated session'), '');\n            Craft.elevatedSessionManager.requireElevatedSession(\n              this.generateRecoveryCodes.bind(this),\n              this.failedElevation.bind(this)\n            );\n          }\n        }\n      },\n\n      onDownloadRecoveryCodesBtn: function (ev) {\n        ev.preventDefault();\n\n        if (!$(ev.currentTarget).hasClass('disabled')) {\n          this.showStatus(Craft.t('app', 'Waiting for elevated session'), '');\n          Craft.elevatedSessionManager.requireElevatedSession(\n            this.downloadRecoveryCodes.bind(this),\n            this.failedElevation.bind(this)\n          );\n        }\n      },\n\n      failedElevation: function () {\n        this.clearStatus();\n      },\n\n      generateRecoveryCodes: function () {\n        this.clearStatus();\n\n        // GET registration options from the endpoint that calls\n        Craft.sendActionRequest('POST', this.settings.generateRecoveryCodes)\n          .then((response) => {\n            this.clearStatus();\n            // Show UI appropriate for the `verified` status\n            if (response.data.verified) {\n              Craft.cp.displaySuccess(\n                Craft.t('app', 'Recovery codes generated.')\n              );\n              if (response.data.html) {\n                this.slideout.$container.html(response.data.html);\n                this.init(this.slideout); //re-initialise the slideout\n              }\n            } else {\n              this.showStatus('Something went wrong!');\n            }\n          })\n          .catch(({response}) => {\n            this.showStatus(response.data.message);\n          });\n      },\n\n      downloadRecoveryCodes: function () {\n        this.clearStatus();\n\n        Craft.downloadFromUrl(\n          'POST',\n          Craft.getActionUrl(this.settings.downloadRecoveryCodes),\n          this.$downloadRecoveryCodes.serialize()\n        ).then((response) => {\n          this.clearStatus();\n\n          // Show UI message\n          Craft.cp.displaySuccess(Craft.t('app', 'Recovery codes downloaded.'));\n        });\n      },\n    },\n    {\n      defaults: {\n        downloadRecoveryCodes: 'auth/download-recovery-codes',\n        generateRecoveryCodes: 'auth/generate-recovery-codes',\n      },\n    }\n  );\n})(jQuery);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* [@simplewebauthn/browser@7.1.0] */\nfunction utf8StringToBuffer(value) {\n    return new TextEncoder().encode(value);\n}\n\nfunction bufferToBase64URLString(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let str = '';\n    for (const charCode of bytes) {\n        str += String.fromCharCode(charCode);\n    }\n    const base64String = btoa(str);\n    return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction base64URLStringToBuffer(base64URLString) {\n    const base64 = base64URLString.replace(/-/g, '+').replace(/_/g, '/');\n    const padLength = (4 - (base64.length % 4)) % 4;\n    const padded = base64.padEnd(base64.length + padLength, '=');\n    const binary = atob(padded);\n    const buffer = new ArrayBuffer(binary.length);\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n}\n\nfunction browserSupportsWebAuthn() {\n    return ((window === null || window === void 0 ? void 0 : window.PublicKeyCredential) !== undefined && typeof window.PublicKeyCredential === 'function');\n}\n\nfunction toPublicKeyCredentialDescriptor(descriptor) {\n    const { id } = descriptor;\n    return {\n        ...descriptor,\n        id: base64URLStringToBuffer(id),\n        transports: descriptor.transports,\n    };\n}\n\nfunction isValidDomain(hostname) {\n    return (hostname === 'localhost' || /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname));\n}\n\nclass WebAuthnError extends Error {\n    constructor(message, name = 'WebAuthnError') {\n        super(message);\n        this.name = name;\n    }\n}\n\nfunction identifyRegistrationError({ error, options, }) {\n    var _a, _b;\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal === new AbortController().signal) {\n            return new WebAuthnError('Registration ceremony was sent an abort signal', 'AbortError');\n        }\n    }\n    else if (error.name === 'ConstraintError') {\n        if (((_a = publicKey.authenticatorSelection) === null || _a === void 0 ? void 0 : _a.requireResidentKey) === true) {\n            return new WebAuthnError('Discoverable credentials were required but no available authenticator supported it', 'ConstraintError');\n        }\n        else if (((_b = publicKey.authenticatorSelection) === null || _b === void 0 ? void 0 : _b.userVerification) === 'required') {\n            return new WebAuthnError('User verification was required but no available authenticator supported it', 'ConstraintError');\n        }\n    }\n    else if (error.name === 'InvalidStateError') {\n        return new WebAuthnError('The authenticator was previously registered', 'InvalidStateError');\n    }\n    else if (error.name === 'NotAllowedError') ;\n    else if (error.name === 'NotSupportedError') {\n        const validPubKeyCredParams = publicKey.pubKeyCredParams.filter(param => param.type === 'public-key');\n        if (validPubKeyCredParams.length === 0) {\n            return new WebAuthnError('No entry in pubKeyCredParams was of type \"public-key\"', 'NotSupportedError');\n        }\n        return new WebAuthnError('No available authenticator supported any of the specified pubKeyCredParams algorithms', 'NotSupportedError');\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError(`${window.location.hostname} is an invalid domain`, 'SecurityError');\n        }\n        else if (publicKey.rp.id !== effectiveDomain) {\n            return new WebAuthnError(`The RP ID \"${publicKey.rp.id}\" is invalid for this domain`, 'SecurityError');\n        }\n    }\n    else if (error.name === 'TypeError') {\n        if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n            return new WebAuthnError('User ID was not between 1 and 64 characters', 'TypeError');\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError('The authenticator was unable to process the specified options, or could not create a new credential', 'UnknownError');\n    }\n    return error;\n}\n\nclass WebAuthnAbortService {\n    createNewAbortSignal() {\n        if (this.controller) {\n            this.controller.abort('Cancelling existing WebAuthn API call for new one');\n        }\n        const newController = new AbortController();\n        this.controller = newController;\n        return newController.signal;\n    }\n}\nconst webauthnAbortService = new WebAuthnAbortService();\n\nconst attachments = ['cross-platform', 'platform'];\nfunction toAuthenticatorAttachment(attachment) {\n    if (!attachment) {\n        return;\n    }\n    if (attachments.indexOf(attachment) < 0) {\n        return;\n    }\n    return attachment;\n}\n\nasync function startRegistration(creationOptionsJSON) {\n    var _a;\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    const publicKey = {\n        ...creationOptionsJSON,\n        challenge: base64URLStringToBuffer(creationOptionsJSON.challenge),\n        user: {\n            ...creationOptionsJSON.user,\n            id: utf8StringToBuffer(creationOptionsJSON.user.id),\n        },\n        excludeCredentials: (_a = creationOptionsJSON.excludeCredentials) === null || _a === void 0 ? void 0 : _a.map(toPublicKeyCredentialDescriptor),\n    };\n    const options = { publicKey };\n    options.signal = webauthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.create(options));\n    }\n    catch (err) {\n        throw identifyRegistrationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Registration was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let transports = undefined;\n    if (typeof response.getTransports === 'function') {\n        transports = response.getTransports();\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            attestationObject: bufferToBase64URLString(response.attestationObject),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            transports,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nfunction bufferToUTF8String(value) {\n    return new TextDecoder('utf-8').decode(value);\n}\n\nasync function browserSupportsWebAuthnAutofill() {\n    const globalPublicKeyCredential = window.PublicKeyCredential;\n    return (globalPublicKeyCredential.isConditionalMediationAvailable !== undefined &&\n        globalPublicKeyCredential.isConditionalMediationAvailable());\n}\n\nfunction identifyAuthenticationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal === new AbortController().signal) {\n            return new WebAuthnError('Authentication ceremony was sent an abort signal', 'AbortError');\n        }\n    }\n    else if (error.name === 'NotAllowedError') ;\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError(`${window.location.hostname} is an invalid domain`, 'SecurityError');\n        }\n        else if (publicKey.rpId !== effectiveDomain) {\n            return new WebAuthnError(`The RP ID \"${publicKey.rpId}\" is invalid for this domain`, 'SecurityError');\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError('The authenticator was unable to process the specified options, or could not create a new assertion signature', 'UnknownError');\n    }\n    return error;\n}\n\nasync function startAuthentication(requestOptionsJSON, useBrowserAutofill = false) {\n    var _a, _b;\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    let allowCredentials;\n    if (((_a = requestOptionsJSON.allowCredentials) === null || _a === void 0 ? void 0 : _a.length) !== 0) {\n        allowCredentials = (_b = requestOptionsJSON.allowCredentials) === null || _b === void 0 ? void 0 : _b.map(toPublicKeyCredentialDescriptor);\n    }\n    const publicKey = {\n        ...requestOptionsJSON,\n        challenge: base64URLStringToBuffer(requestOptionsJSON.challenge),\n        allowCredentials,\n    };\n    const options = {};\n    if (useBrowserAutofill) {\n        if (!(await browserSupportsWebAuthnAutofill())) {\n            throw Error('Browser does not support WebAuthn autofill');\n        }\n        const eligibleInputs = document.querySelectorAll(\"input[autocomplete*='webauthn']\");\n        if (eligibleInputs.length < 1) {\n            throw Error('No <input> with `\"webauthn\"` in its `autocomplete` attribute was detected');\n        }\n        options.mediation = 'conditional';\n        publicKey.allowCredentials = [];\n    }\n    options.publicKey = publicKey;\n    options.signal = webauthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.get(options));\n    }\n    catch (err) {\n        throw identifyAuthenticationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Authentication was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let userHandle = undefined;\n    if (response.userHandle) {\n        userHandle = bufferToUTF8String(response.userHandle);\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            authenticatorData: bufferToBase64URLString(response.authenticatorData),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            signature: bufferToBase64URLString(response.signature),\n            userHandle,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nasync function platformAuthenticatorIsAvailable() {\n    if (!browserSupportsWebAuthn()) {\n        return false;\n    }\n    return PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\n\nexport { browserSupportsWebAuthn, browserSupportsWebAuthnAutofill, platformAuthenticatorIsAvailable, startAuthentication, startRegistration };\n","import {browserSupportsWebAuthn} from '@simplewebauthn/browser';\n\n(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.Auth2fa = Garnish.Base.extend(\n    {\n      $auth2faLoginFormContainer: null,\n      $auth2faSetupFormContainer: null,\n      $alternative2faLink: null,\n      $alternative2faTypesContainer: null,\n      $viewSetupBtns: null,\n      $errors: null,\n\n      slideout: null,\n      $removeSetupButton: null,\n      $closeButton: null,\n      $verifyButton: null,\n\n      init: function (settings) {\n        this.setSettings(settings, Craft.Auth2fa.defaults);\n\n        this.$auth2faLoginFormContainer = $('#auth-2fa-form');\n        this.$auth2faSetupFormContainer = $('#auth-2fa-setup');\n        // this.$alternative2faLink = $('#alternative-2fa');\n        // this.$alternative2faTypesContainer = $('#alternative-2fa-types');\n        this.$viewSetupBtns = this.$auth2faSetupFormContainer.find(\n          'button.auth-2fa-view-setup'\n        );\n        this.$errors = $('#login-errors');\n\n        // this.addListener(\n        //   this.$alternative2faLink,\n        //   'click',\n        //   'onAlternative2faTypeClick'\n        // );\n        this.addListener(this.$viewSetupBtns, 'click', 'onViewSetupBtnClick');\n      },\n\n      show2faForm: function (auth2faForm, $loginDiv) {\n        this.$auth2faLoginFormContainer.html('').append(auth2faForm);\n        $loginDiv.addClass('auth-2fa');\n        $('#login-form-buttons').hide();\n\n        const $submitBtn = this.$auth2faLoginFormContainer.find('.submit');\n\n        this.connectAlternative2fa();\n        this.onSubmitResponse($submitBtn);\n      },\n\n      getCurrent2faType: function ($container) {\n        let currentMethod = $container.attr('data-2fa-type');\n\n        if (currentMethod === undefined) {\n          currentMethod = null;\n        }\n\n        return currentMethod;\n      },\n\n      initSlideout: function () {\n        this.$errors = this.slideout.$container.find('.so-notice');\n        this.$closeButton = this.slideout.$container.find('button.close');\n        this.$verifyButton = this.slideout.$container.find('#auth2fa-verify');\n        this.$removeSetupButton = this.slideout.$container.find(\n          '#auth-2fa-remove-setup'\n        );\n\n        this.addListener(this.$removeSetupButton, 'click', 'onRemoveSetup');\n        this.addListener(this.$closeButton, 'click', 'onClickClose');\n        this.addListener(this.$verifyButton, 'click', 'onVerify');\n        this.addListener(this.slideout.$container, 'keypress', (ev) => {\n          if (ev.keyCode === Garnish.RETURN_KEY) {\n            this.$verifyButton.trigger('click');\n          }\n        });\n      },\n\n      onViewSetupBtnClick: function (ev) {\n        const $button = $(ev.currentTarget);\n        $button.disable();\n        ev.preventDefault();\n\n        const data = {\n          selectedMethod: this.getCurrent2faType($button),\n        };\n\n        Craft.sendActionRequest('POST', this.settings.setupSlideoutHtml, {data})\n          .then((response) => {\n            this.slideout = new Craft.Slideout(response.data.html);\n\n            this.initSlideout();\n\n            // initialise webauthn\n            if (\n              data.selectedMethod === 'craft\\\\auth\\\\type\\\\WebAuthn' &&\n              browserSupportsWebAuthn()\n            ) {\n              new Craft.WebAuthnSetup(this.slideout);\n            }\n\n            // initialise recovery codes\n            if (data.selectedMethod === 'craft\\\\auth\\\\type\\\\RecoveryCodes') {\n              new Craft.RecoveryCodesSetup(this.slideout);\n            }\n\n            this.slideout.on('close', (ev) => {\n              this.$removeSetupButton = null;\n              this.slideout = null;\n              $button.enable();\n            });\n          })\n          .catch(({response}) => {\n            // Add the error message\n            Craft.cp.displayError(response.data.message);\n            $button.enable();\n          });\n      },\n\n      onClickClose: function (ev) {\n        this.slideout.close();\n      },\n\n      onRemoveSetup: function (ev) {\n        ev.preventDefault();\n\n        let currentMethod = this.getCurrent2faType(\n          this.slideout.$container.find('#setup-form-2fa')\n        );\n\n        if (currentMethod === undefined) {\n          currentMethod = null;\n        }\n\n        let data = {\n          currentMethod: currentMethod,\n        };\n\n        const confirmed = confirm(\n          Craft.t('app', 'Are you sure you want to delete this setup?')\n        );\n\n        if (confirmed) {\n          Craft.sendActionRequest('POST', this.settings.removeSetup, {data})\n            .then((response) => {\n              $(ev.currentTarget).remove();\n              Craft.cp.displayNotice(Craft.t('app', '2FA setup removed.'));\n            })\n            .catch((e) => {\n              Craft.cp.displayError(e.response.data.message);\n            })\n            .finally(() => {\n              this.slideout.close();\n            });\n        }\n      },\n\n      onVerify: function (ev) {\n        ev.preventDefault();\n\n        const $submitBtn = this.slideout.$container.find('#auth2fa-verify');\n\n        $submitBtn.addClass('loading');\n\n        let data = {\n          auth2faFields: {},\n          currentMethod: null,\n        };\n\n        data.auth2faFields = this._get2faFields(this.slideout.$container);\n        data.currentMethod = this._getCurrentMethodInput(\n          this.slideout.$container\n        );\n\n        Craft.sendActionRequest('POST', this.settings.saveSetup, {data})\n          .then((response) => {\n            this.onSubmitResponse($submitBtn);\n            Craft.cp.displayNotice(Craft.t('app', '2FA settings saved.'));\n            this.slideout.close();\n          })\n          .catch(({response}) => {\n            this.onSubmitResponse($submitBtn);\n\n            // Add the error message\n            this.showStatus(response.data.message);\n            Craft.cp.displayError(response.data.message);\n          });\n      },\n\n      onSubmitResponse: function ($submitBtn) {\n        $submitBtn.removeClass('loading');\n      },\n\n      showStatus: function (message, type = 'error') {\n        this.clearStatus();\n\n        if (type == 'error') {\n          this.$errors.addClass('error');\n        } else {\n          this.$errors.removeClass('error');\n        }\n        this.$errors.text(message);\n      },\n\n      clearStatus: function ($errorsContainer = null) {\n        if ($errorsContainer !== null) {\n          $errorsContainer.empty();\n        } else {\n          this.$errors.empty();\n        }\n      },\n\n      onAlternative2faTypeClick: function (event) {\n        this.clearStatus();\n\n        let $btn = $(event.currentTarget);\n        $btn.attr('disabled', true).disable();\n\n        // get current authenticator class via data-2fa-type\n        let currentMethod = this.getCurrent2faType(\n          this.$auth2faLoginFormContainer.find('#verifyContainer')\n        );\n        if (currentMethod === null) {\n          this.$alternative2faLink.hide();\n          this.showStatus(\n            Craft.t('app', 'No alternative 2FA methods available.')\n          );\n        }\n\n        let data = {\n          currentMethod: currentMethod,\n          webAuthnSupported: browserSupportsWebAuthn(),\n        };\n\n        // get available 2FA methods, minus the one that's being shown\n        this.getAlternative2faTypes(data, $btn);\n      },\n\n      getAlternative2faTypes: function (data, $btn) {\n        Craft.sendActionRequest(\n          'POST',\n          this.settings.fetchAlternative2faTypes,\n          {\n            data,\n          }\n        )\n          .then((response) => {\n            if (response.data.alternativeTypes !== undefined) {\n              this.showAlternative2faTypes(response.data.alternativeTypes);\n            }\n          })\n          .catch(({response}) => {\n            this.showStatus(response.data.message);\n          })\n          .finally(() => {\n            $btn.attr('disabled', false).enable();\n          });\n      },\n\n      showAlternative2faTypes: function (data) {\n        this.$alternative2faTypesContainer.empty();\n        let alternativeTypes = Object.entries(data).map(([key, value]) => ({\n          key,\n          value,\n        }));\n        if (alternativeTypes.length > 0) {\n          alternativeTypes.forEach((type) => {\n            this.$alternative2faTypesContainer.append(\n              '<li><button ' +\n                'class=\"alternative-2fa-type\" ' +\n                'type=\"button\" ' +\n                'value=\"' +\n                type.key +\n                '\">' +\n                type.value.name +\n                '</button></li>'\n            );\n          });\n        } else {\n          this.showStatus(\n            Craft.t('app', 'No alternative 2FA methods available.')\n          );\n        }\n\n        // list them by name\n        this.$alternative2faLink\n          .hide()\n          .after(this.$alternative2faTypesContainer);\n\n        // clicking on a method name swaps the form fields\n        this.addListener(\n          $('.alternative-2fa-type'),\n          'click',\n          'onSelectAlternative2faType'\n        );\n      },\n\n      onSelectAlternative2faType: function (event) {\n        let $btn = $(event.currentTarget);\n        $btn.attr('disabled', true).disable();\n\n        const data = {\n          selectedMethod: $(event.currentTarget).attr('value'),\n        };\n\n        Craft.sendActionRequest('POST', this.settings.loadAlternative2faType, {\n          data,\n        })\n          .then((response) => {\n            if (response.data.auth2faForm !== undefined) {\n              this.$auth2faLoginFormContainer\n                .html('')\n                .append(response.data.auth2faForm);\n\n              this.connectAlternative2fa();\n              this.onSubmitResponse();\n            }\n          })\n          .catch(({response}) => {\n            //this.showStatus(response.data.message);\n          })\n          .finally(() => {\n            $btn.attr('disabled', false).enable();\n          });\n      },\n\n      connectAlternative2fa: function () {\n        this.$alternative2faLink =\n          this.$auth2faLoginFormContainer.find('#alternative-2fa');\n        this.$alternative2faTypesContainer =\n          this.$auth2faLoginFormContainer.find('#alternative-2fa-types');\n        this.addListener(\n          this.$alternative2faLink,\n          'click',\n          'onAlternative2faTypeClick'\n        );\n      },\n\n      _get2faFields: function ($container) {\n        let auth2faFields = {};\n\n        $container\n          .find('input[name^=\"auth2faFields[')\n          .each(function (index, element) {\n            let name = $(element).attr('id');\n            auth2faFields[name] = $(element).val();\n          });\n\n        return auth2faFields;\n      },\n\n      _getCurrentMethodInput: function ($container) {\n        return $container.find('input[name=\"currentMethod\"').val();\n      },\n    },\n    {\n      defaults: {\n        fetchAlternative2faTypes: 'auth/fetch-alternative-2fa-types',\n        loadAlternative2faType: 'auth/load-alternative-2fa-type',\n        setupSlideoutHtml: 'auth/setup-slideout-html',\n        saveSetup: 'auth/save-setup',\n        removeSetup: 'auth/remove-setup',\n      },\n    }\n  );\n})(jQuery);\n","import {startAuthentication} from '@simplewebauthn/browser';\n\n/** global: Craft */\n/** global: Garnish */\nCraft.Auth2faLogin = {\n  loginWithPassword: false,\n  loginWithSecurityKey: false,\n\n  startWebauthnLogin: function (data, inModal = false) {\n    return Craft.sendActionRequest('POST', 'users/start-webauthn-login', {data})\n      .then((response) => {\n        const authenticationOptions = response.data.authenticationOptions;\n        const userId = response.data.userId;\n        const duration = response.data.duration;\n\n        try {\n          return startAuthentication(authenticationOptions)\n            .then((authResponse) => {\n              return Promise.resolve(\n                Craft.Auth2faLogin.verifyWebAuthnLogin(\n                  authenticationOptions,\n                  authResponse,\n                  userId,\n                  duration,\n                  inModal\n                )\n              );\n            })\n            .catch((authResponseError) => {\n              return Promise.reject({success: false, error: authResponseError});\n            });\n        } catch (error) {\n          return Promise.reject({success: false, error: error});\n        }\n      })\n      .catch((response) => {\n        return Promise.reject({success: false, error: response.error.message});\n      });\n  },\n\n  verifyWebAuthnLogin: function (\n    authenticationOptions,\n    authResponse,\n    userId,\n    duration,\n    inModal\n  ) {\n    let data = {\n      userId: userId,\n      authenticationOptions: JSON.stringify(authenticationOptions),\n      authResponse: JSON.stringify(authResponse),\n      duration: duration,\n    };\n\n    return Craft.sendActionRequest('POST', 'users/webauthn-login', {data})\n      .then((response) => {\n        if (inModal) {\n          return Promise.resolve({success: true});\n        } else {\n          return Promise.resolve({\n            success: true,\n            returnUrl: response.data.returnUrl,\n          });\n        }\n      })\n      .catch(({response}) => {\n        return Promise.reject({success: false, error: response.data.message});\n      });\n  },\n\n  submit2faCode: function ($auth2faLoginFormContainer, inModal = false) {\n    let data = {\n      auth2faFields: {},\n      currentMethod: null,\n    };\n\n    let auth2fa = new Craft.Auth2fa();\n\n    data.auth2faFields = auth2fa._get2faFields($auth2faLoginFormContainer);\n    data.currentMethod = auth2fa._getCurrentMethodInput(\n      $auth2faLoginFormContainer\n    );\n\n    return Craft.sendActionRequest('POST', 'users/verify-2fa', {data})\n      .then((response) => {\n        if (inModal) {\n          return Promise.resolve({success: true});\n        } else {\n          return Promise.resolve({\n            success: true,\n            returnUrl: response.data.returnUrl,\n          });\n        }\n      })\n      .catch(({response}) => {\n        return Promise.reject({success: false, error: response.data.message});\n      });\n  },\n};\n","import {browserSupportsWebAuthn} from '@simplewebauthn/browser';\nimport {startRegistration} from '@simplewebauthn/browser';\n\n(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.WebAuthnSetup = Craft.Auth2fa.extend(\n    {\n      $addSecurityKeyBtn: null,\n      $keysTable: null,\n\n      init: function (slideout, settings) {\n        this.setSettings(settings, Craft.WebAuthnSetup.defaults);\n        this.slideout = slideout;\n        this.initSlideout();\n\n        this.$addSecurityKeyBtn = $('#add-security-key');\n        this.$keysTable = this.slideout.$container.find(\n          '#webauthn-security-keys'\n        );\n\n        if (!browserSupportsWebAuthn()) {\n          Craft.cp.displayError(\n            Craft.t('app', 'This browser does not support WebAuthn.')\n          );\n          this.$addSecurityKeyBtn.disable();\n        }\n\n        this.addListener(\n          this.$addSecurityKeyBtn,\n          'click',\n          'onAddSecurityKeyBtn'\n        );\n\n        if (this.$keysTable !== null) {\n          this.addListener(\n            this.$keysTable.find('.delete'),\n            'click',\n            'onDeleteSecurityKey'\n          );\n        }\n      },\n\n      onAddSecurityKeyBtn: function (ev) {\n        if (!$(ev.currentTarget).hasClass('disabled')) {\n          this.showStatus(Craft.t('app', 'Waiting for elevated session'), '');\n          Craft.elevatedSessionManager.requireElevatedSession(\n            this.startWebAuthRegistration.bind(this),\n            this.failedElevation.bind(this)\n          );\n        }\n      },\n\n      failedElevation: function () {\n        this.clearStatus();\n      },\n\n      startWebAuthRegistration: function () {\n        this.clearStatus();\n\n        // GET registration options from the endpoint that calls\n        Craft.sendActionRequest(\n          'POST',\n          this.settings.generateRegistrationOptions\n        )\n          .then((response) => {\n            const registrationOptions = response.data.registrationOptions;\n            try {\n              this.showStatus(Craft.t('app', 'Starting registration'), '');\n              const credentialName = Craft.escapeHtml(\n                prompt(\n                  Craft.t('app', 'Please enter a name for the security key')\n                )\n              );\n              startRegistration(registrationOptions)\n                .then((regResponse) => {\n                  this.verifyWebAuthnRegistration(regResponse, credentialName);\n                })\n                .catch((regResponseError) => {\n                  this.showStatus(\n                    Craft.t('app', 'Registration failed:') +\n                      ' ' +\n                      regResponseError.message\n                  );\n                });\n            } catch (error) {\n              this.showStatus(error);\n            }\n          })\n          .catch(({response}) => {\n            this.showStatus(response.data.message);\n          });\n      },\n\n      verifyWebAuthnRegistration: function (\n        startRegistrationResponse,\n        credentialName\n      ) {\n        this.showStatus(Craft.t('app', 'Starting verification'), '');\n        let data = {\n          credentials: JSON.stringify(startRegistrationResponse),\n          credentialName: credentialName,\n        };\n\n        // POST the response to the endpoint\n        Craft.sendActionRequest('POST', this.settings.verifyRegistration, {\n          data,\n        })\n          .then((response) => {\n            this.clearStatus();\n            // Show UI appropriate for the `verified` status\n            if (response.data.verified) {\n              Craft.cp.displaySuccess(\n                Craft.t('app', 'Security key registered.')\n              );\n              if (response.data.html) {\n                this.slideout.$container.html(response.data.html);\n                this.init(this.slideout); //re-initialise slideout\n              }\n            } else {\n              this.showStatus('Something went wrong!');\n            }\n          })\n          .catch(({response}) => {\n            this.showStatus(response.data.message);\n          });\n      },\n\n      onDeleteSecurityKey: function (ev) {\n        ev.preventDefault();\n\n        const $uid = $(ev.currentTarget).attr('data-uid');\n        const credentialName = $(ev.currentTarget)\n          .parents('tr')\n          .find('[data-name=\"credentialName\"]')\n          .text();\n\n        let data = {\n          uid: $uid,\n        };\n\n        const confirmed = confirm(\n          Craft.t(\n            'app',\n            'Are you sure you want to delete ‘{credentialName}‘ security key?',\n            {credentialName: credentialName}\n          )\n        );\n\n        if ($uid !== undefined && confirmed) {\n          Craft.sendActionRequest('POST', this.settings.deleteSecurityKey, {\n            data,\n          })\n            .then((response) => {\n              Craft.cp.displaySuccess(response.data.message);\n              if (response.data.html) {\n                this.slideout.$container.html(response.data.html);\n                this.init(this.slideout); //re-initialise slideout\n              }\n            })\n            .catch(({response}) => {\n              this.showStatus(response.data.message);\n            });\n        }\n      },\n    },\n    {\n      defaults: {\n        generateRegistrationOptions: 'auth/generate-registration-options',\n        verifyRegistration: 'auth/verify-registration',\n        deleteSecurityKey: 'auth/delete-security-key',\n      },\n    }\n  );\n})(jQuery);\n"],"names":["$","jQuery","Craft","RecoveryCodesSetup","Auth2fa","extend","$generateRecoveryCodesBtn","$downloadRecoveryCodes","init","slideout","settings","this","setSettings","defaults","initSlideout","$container","find","addListener","length","onGenerateRecoveryCodesBtn","ev","currentTarget","hasClass","confirm","t","showStatus","elevatedSessionManager","requireElevatedSession","generateRecoveryCodes","bind","failedElevation","onDownloadRecoveryCodesBtn","preventDefault","downloadRecoveryCodes","clearStatus","sendActionRequest","then","response","data","verified","cp","displaySuccess","html","message","downloadFromUrl","getActionUrl","serialize","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","bufferToBase64URLString","buffer","bytes","Uint8Array","str","charCode","String","fromCharCode","btoa","replace","base64URLStringToBuffer","base64URLString","base64","padLength","padded","padEnd","binary","atob","ArrayBuffer","i","charCodeAt","browserSupportsWebAuthn","window","PublicKeyCredential","toPublicKeyCredentialDescriptor","descriptor","id","transports","isValidDomain","hostname","test","WebAuthnError","Error","constructor","name","super","webauthnAbortService","createNewAbortSignal","controller","abort","newController","AbortController","signal","attachments","toAuthenticatorAttachment","attachment","indexOf","async","startAuthentication","requestOptionsJSON","useBrowserAutofill","_a","_b","allowCredentials","map","publicKey","challenge","options","globalPublicKeyCredential","isConditionalMediationAvailable","browserSupportsWebAuthnAutofill","document","querySelectorAll","mediation","credential","navigator","credentials","get","err","error","effectiveDomain","location","rpId","identifyAuthenticationError","rawId","type","userHandle","value","TextDecoder","decode","authenticatorData","clientDataJSON","signature","clientExtensionResults","getClientExtensionResults","authenticatorAttachment","Garnish","Base","$auth2faLoginFormContainer","$auth2faSetupFormContainer","$alternative2faLink","$alternative2faTypesContainer","$viewSetupBtns","$errors","$removeSetupButton","$closeButton","$verifyButton","show2faForm","auth2faForm","$loginDiv","append","addClass","hide","$submitBtn","connectAlternative2fa","onSubmitResponse","getCurrent2faType","currentMethod","attr","keyCode","RETURN_KEY","trigger","onViewSetupBtnClick","$button","disable","selectedMethod","setupSlideoutHtml","Slideout","WebAuthnSetup","on","enable","displayError","onClickClose","close","onRemoveSetup","removeSetup","remove","displayNotice","e","onVerify","auth2faFields","_get2faFields","_getCurrentMethodInput","saveSetup","removeClass","text","$errorsContainer","empty","onAlternative2faTypeClick","event","$btn","webAuthnSupported","getAlternative2faTypes","fetchAlternative2faTypes","alternativeTypes","showAlternative2faTypes","Object","entries","key","forEach","after","onSelectAlternative2faType","loadAlternative2faType","each","index","element","val","Auth2faLogin","loginWithPassword","loginWithSecurityKey","startWebauthnLogin","inModal","authenticationOptions","userId","duration","authResponse","Promise","resolve","verifyWebAuthnLogin","authResponseError","reject","success","JSON","stringify","returnUrl","submit2faCode","auth2fa","$addSecurityKeyBtn","$keysTable","onAddSecurityKeyBtn","startWebAuthRegistration","generateRegistrationOptions","registrationOptions","credentialName","escapeHtml","prompt","creationOptionsJSON","user","TextEncoder","encode","excludeCredentials","create","authenticatorSelection","requireResidentKey","userVerification","pubKeyCredParams","filter","param","rp","byteLength","identifyRegistrationError","getTransports","attestationObject","startRegistration","regResponse","verifyWebAuthnRegistration","regResponseError","startRegistrationResponse","verifyRegistration","onDeleteSecurityKey","$uid","parents","uid","confirmed","deleteSecurityKey"],"sourceRoot":""}