{"version":3,"file":"MatrixInput.js","mappings":"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","sources":["webpack:///./MatrixInput.js","webpack:///external var \"jQuery\""],"sourcesContent":["import $ from 'jquery';\n\n(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  /**\n   * Matrix input class\n   */\n  Craft.MatrixInput = Garnish.Base.extend(\n    {\n      id: null,\n      entryTypes: null,\n      entryTypesByHandle: null,\n      inputNamePrefix: null,\n      inputIdPrefix: null,\n\n      showingAddEntryMenu: false,\n      addEntryBtnGroupWidth: null,\n      addEntryBtnContainerWidth: null,\n\n      $container: null,\n      $form: null,\n      $entriesContainer: null,\n      $addEntryBtnContainer: null,\n      $addEntryBtn: null,\n      $addEntryMenuBtn: null,\n      $statusMessage: null,\n\n      entrySort: null,\n      entrySelect: null,\n\n      addingEntry: false,\n\n      /**\n       * @returns {Craft.ElementEditor|undefined}\n       */\n      get elementEditor() {\n        return this.$form.data('elementEditor');\n      },\n\n      init: function (id, entryTypes, inputNamePrefix, settings) {\n        this.id = id;\n        this.entryTypes = entryTypes;\n        this.inputNamePrefix = inputNamePrefix;\n        this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n        // see if settings was actually set to the maxEntries value\n        if (typeof settings === 'number') {\n          settings = {maxEntries: settings};\n        }\n        this.setSettings(settings, Craft.MatrixInput.defaults);\n\n        this.$container = $('#' + this.id);\n        this.$form = this.$container.closest('form');\n        this.$entriesContainer = this.$container.children('.blocks');\n        this.$addEntryBtnContainer = this.$container.children('.buttons');\n        this.$addEntryBtn =\n          this.$addEntryBtnContainer.children('.btn:not(.menubtn)');\n        this.$addEntryMenuBtn = this.$addEntryBtnContainer.children('.menubtn');\n        this.$statusMessage = this.$container.find('[data-status-message]');\n\n        this.$container.data('matrix', this);\n\n        this.entryTypesByHandle = {};\n\n        for (let i = 0; i < this.entryTypes.length; i++) {\n          const entryType = this.entryTypes[i];\n          this.entryTypesByHandle[entryType.handle] = entryType;\n        }\n\n        const $entries = this.$entriesContainer.children('.matrixblock');\n        const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n\n        this.entrySort = new Garnish.DragSort($entries, {\n          handle: '> .actions > .move',\n          axis: 'y',\n          filter: () => {\n            // Only return all the selected items if the target item is selected\n            if (this.entrySort.$targetItem.hasClass('sel')) {\n              return this.entrySelect.getSelectedItems();\n            } else {\n              return this.entrySort.$targetItem;\n            }\n          },\n          collapseDraggees: true,\n          magnetStrength: 4,\n          helperLagBase: 1.5,\n          helperOpacity: 0.9,\n          onDragStop: () => {\n            this.trigger('entrySortDragStop');\n          },\n          onSortChange: () => {\n            this.entrySelect.resetItemOrder();\n          },\n        });\n\n        this.entrySelect = new Garnish.Select(\n          this.$entriesContainer,\n          $entries,\n          {\n            multi: true,\n            vertical: true,\n            handle: '> .actions > .checkbox, > .titlebar',\n            filter: ':not(.tab-label)',\n            checkboxMode: true,\n          }\n        );\n\n        for (let i = 0; i < $entries.length; i++) {\n          const $entry = $($entries[i]);\n          const entry = new Entry(this, $entry);\n\n          if (entry.id && $.inArray('' + entry.id, collapsedEntries) !== -1) {\n            entry.collapse();\n          }\n        }\n\n        this.addListener(this.$addEntryBtn, 'activate', async function () {\n          this.$addEntryBtn.addClass('loading');\n          try {\n            await this.addEntry(this.$addEntryBtn.data('type'));\n          } finally {\n            this.$addEntryBtn.removeClass('loading');\n          }\n        });\n\n        if (this.$addEntryMenuBtn.length) {\n          this.$addEntryMenuBtn\n            .disclosureMenu()\n            .data('disclosureMenu')\n            .$container.find('button')\n            .on('activate', async (ev) => {\n              this.$addEntryMenuBtn.addClass('loading');\n              try {\n                await this.addEntry($(ev.currentTarget).data('type'));\n              } finally {\n                this.$addEntryMenuBtn.removeClass('loading');\n              }\n            });\n        }\n\n        this.updateAddEntryBtn();\n        this.trigger('afterInit');\n      },\n\n      canAddMoreEntries: function () {\n        return (\n          !this.maxEntries ||\n          this.$entriesContainer.children().length < this.maxEntries\n        );\n      },\n\n      updateAddEntryBtn: function () {\n        if (this.canAddMoreEntries()) {\n          this.$addEntryBtn.removeClass('disabled').removeAttr('aria-disabled');\n          this.$addEntryMenuBtn.removeClass('disabled');\n\n          for (let i = 0; i < this.entrySelect.$items.length; i++) {\n            const entry = this.entrySelect.$items.eq(i).data('entry');\n\n            if (entry) {\n              entry.$actionMenu\n                .find('button[data-action=add]')\n                .parent()\n                .removeClass('disabled');\n              entry.$actionMenu\n                .find('button[data-action=add]')\n                .removeAttr('aria-disabled');\n            }\n          }\n        } else {\n          this.$addEntryBtn.addClass('disabled').attr('aria-disabled', 'true');\n          this.$addEntryMenuBtn.addClass('disabled');\n\n          for (let i = 0; i < this.entrySelect.$items.length; i++) {\n            const entry = this.entrySelect.$items.eq(i).data('entry');\n\n            if (entry) {\n              entry.$actionMenu\n                .find('button[data-action=add]')\n                .parent()\n                .addClass('disabled');\n              entry.$actionMenu\n                .find('button[data-action=add]')\n                .attr('aria-disabled', 'true');\n            }\n          }\n        }\n      },\n\n      updateStatusMessage: function () {\n        this.$statusMessage.empty();\n        let message;\n\n        if (!this.canAddMoreEntries()) {\n          message = Craft.t(\n            'app',\n            'Entry could not be added. Maximum number of entries reached.'\n          );\n        }\n\n        setTimeout(() => {\n          this.$statusMessage.text(message);\n        }, 250);\n      },\n\n      addEntry: async function (type, $insertBefore, autofocus) {\n        if (this.addingEntry) {\n          // only one new entry at a time\n          return;\n        }\n\n        if (!this.canAddMoreEntries()) {\n          this.updateStatusMessage();\n          return;\n        }\n\n        this.addingEntry = true;\n\n        const {data} = await Craft.sendActionRequest(\n          'POST',\n          'matrix/render-block',\n          {\n            data: {\n              fieldId: this.settings.fieldId,\n              entryTypeId: this.entryTypesByHandle[type].id,\n              ownerId: this.settings.ownerId,\n              ownerElementType: this.settings.ownerElementType,\n              siteId: this.settings.siteId,\n              namespace: this.settings.namespace,\n            },\n          }\n        );\n\n        const $entry = $(data.blockHtml);\n\n        // Pause the element editor\n        this.elementEditor?.pause();\n\n        if ($insertBefore) {\n          $entry.insertBefore($insertBefore);\n        } else {\n          $entry.appendTo(this.$entriesContainer);\n        }\n\n        this.trigger('entryAdded', {\n          $entry: $entry,\n        });\n\n        // Animate the entry into position\n        $entry.css(this.getHiddenEntryCss($entry)).velocity(\n          {\n            opacity: 1,\n            'margin-bottom': 10,\n          },\n          'fast',\n          () => {\n            $entry.css('margin-bottom', '');\n            Craft.initUiElements($entry.children('.fields'));\n            Craft.appendHeadHtml(data.headHtml);\n            Craft.appendBodyHtml(data.bodyHtml);\n            new Entry(this, $entry);\n            this.entrySort.addItems($entry);\n            this.entrySelect.addItems($entry);\n            this.updateAddEntryBtn();\n\n            Garnish.requestAnimationFrame(() => {\n              if (typeof autofocus === 'undefined' || autofocus) {\n                // Scroll to the entry\n                Garnish.scrollContainerToElement($entry);\n                // Focus on the first focusable element\n                $entry.find('.flex-fields :focusable').first().trigger('focus');\n              }\n\n              // Resume the element editor\n              this.elementEditor?.resume();\n            });\n          }\n        );\n\n        this.addingEntry = false;\n      },\n\n      getEntryTypeByHandle: function (handle) {\n        for (let i = 0; i < this.entryTypes.length; i++) {\n          if (this.entryTypes[i].handle === handle) {\n            return this.entryTypes[i];\n          }\n        }\n      },\n\n      collapseSelectedEntries: function () {\n        this.callOnSelectedEntries('collapse');\n      },\n\n      expandSelectedEntries: function () {\n        this.callOnSelectedEntries('expand');\n      },\n\n      disableSelectedEntries: function () {\n        this.callOnSelectedEntries('disable');\n      },\n\n      enableSelectedEntries: function () {\n        this.callOnSelectedEntries('enable');\n      },\n\n      deleteSelectedEntries: function () {\n        this.callOnSelectedEntries('selfDestruct');\n      },\n\n      callOnSelectedEntries: function (fn) {\n        for (let i = 0; i < this.entrySelect.$selectedItems.length; i++) {\n          this.entrySelect.$selectedItems.eq(i).data('entry')[fn]();\n        }\n      },\n\n      getHiddenEntryCss: function ($entry) {\n        return {\n          opacity: 0,\n          marginBottom: -$entry.outerHeight(),\n        };\n      },\n\n      get maxEntries() {\n        return this.settings.maxEntries;\n      },\n    },\n    {\n      defaults: {\n        fieldId: null,\n        maxEntries: null,\n        namespace: null,\n        ownerElementType: null,\n        ownerId: null,\n        siteId: null,\n        staticEntries: false,\n      },\n\n      collapsedEntryStorageKey:\n        'Craft-' + Craft.systemUid + '.MatrixInput.collapsedEntries',\n\n      getCollapsedEntryIds: function () {\n        if (\n          typeof localStorage[Craft.MatrixInput.collapsedEntryStorageKey] ===\n          'string'\n        ) {\n          return Craft.filterArray(\n            localStorage[Craft.MatrixInput.collapsedEntryStorageKey].split(',')\n          );\n        } else {\n          return [];\n        }\n      },\n\n      setCollapsedEntryIds: function (ids) {\n        localStorage[Craft.MatrixInput.collapsedEntryStorageKey] =\n          ids.join(',');\n      },\n\n      rememberCollapsedEntryId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n\n          if ($.inArray('' + id, collapsedEntries) === -1) {\n            collapsedEntries.push(id);\n            Craft.MatrixInput.setCollapsedEntryIds(collapsedEntries);\n          }\n        }\n      },\n\n      forgetCollapsedEntryId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n          const collapsedEntriesIndex = $.inArray('' + id, collapsedEntries);\n\n          if (collapsedEntriesIndex !== -1) {\n            collapsedEntries.splice(collapsedEntriesIndex, 1);\n            Craft.MatrixInput.setCollapsedEntryIds(collapsedEntries);\n          }\n        }\n      },\n\n      initTabs(container) {\n        const $tabs = $(container).children('.pane-tabs');\n        if (!$tabs.length) {\n          return;\n        }\n\n        // init tab manager\n        let tabManager = new Craft.Tabs($tabs);\n\n        // prevent items in the disclosure menu from changing the URL\n        let disclosureMenu = tabManager.$menuBtn.data('trigger');\n        $(disclosureMenu.$container)\n          .find('li, a')\n          .on('click', function (ev) {\n            ev.preventDefault();\n          });\n\n        tabManager.on('selectTab', (ev) => {\n          const href = ev.$tab.attr('href');\n\n          // Show its content area\n          if (href && href.charAt(0) === '#') {\n            $(href).removeClass('hidden');\n          }\n\n          // Trigger a resize event to update any UI components that are listening for it\n          Garnish.$win.trigger('resize');\n\n          // Fixes Redactor fixed toolbars on previously hidden panes\n          Garnish.$doc.trigger('scroll');\n        });\n\n        tabManager.on('deselectTab', (ev) => {\n          const href = ev.$tab.attr('href');\n          if (href && href.charAt(0) === '#') {\n            // Hide its content area\n            $(ev.$tab.attr('href')).addClass('hidden');\n          }\n        });\n\n        return tabManager;\n      },\n    }\n  );\n\n  const Entry = Garnish.Base.extend({\n    /**\n     * @var {Craft.MatrixInput}\n     */\n    matrix: null,\n    $container: null,\n    $titlebar: null,\n    $tabContainer: null,\n    $fieldsContainer: null,\n    $previewContainer: null,\n    $actionMenu: null,\n    $collapsedInput: null,\n\n    tabManager: null,\n    actionDisclosure: null,\n    formObserver: null,\n    visibleLayoutElements: null,\n    cancelToken: null,\n    ignoreFailedRequest: false,\n\n    isNew: null,\n    id: null,\n\n    collapsed: false,\n\n    init: function (matrix, $container) {\n      this.matrix = matrix;\n      this.$container = $container;\n      this.$titlebar = $container.children('.titlebar');\n      this.$tabContainer = this.$titlebar.children('.matrixblock-tabs');\n      this.$previewContainer = this.$titlebar.children('.preview');\n      this.$fieldsContainer = $container.children('.fields');\n\n      this.$container.data('entry', this);\n\n      this.id = this.$container.data('id');\n      this.isNew =\n        !this.id ||\n        (typeof this.id === 'string' && this.id.substring(0, 3) === 'new');\n\n      if (this.$tabContainer.length) {\n        this.tabManager = Craft.MatrixInput.initTabs(this.$tabContainer);\n      }\n\n      const $actionMenuBtn = this.$container.find('> .actions .action-btn');\n      const actionDisclosure =\n        $actionMenuBtn.data('trigger') ||\n        new Garnish.DisclosureMenu($actionMenuBtn);\n\n      this.$actionMenu = actionDisclosure.$container;\n      this.actionDisclosure = actionDisclosure;\n\n      actionDisclosure.on('show', () => {\n        this.$container.addClass('active');\n        if (this.$container.prev('.matrixblock').length) {\n          this.$actionMenu\n            .find('button[data-action=moveUp]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('button[data-action=moveUp]:first')\n            .parent()\n            .addClass('hidden');\n        }\n        if (this.$container.next('.matrixblock').length) {\n          this.$actionMenu\n            .find('button[data-action=moveDown]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('button[data-action=moveDown]:first')\n            .parent()\n            .addClass('hidden');\n        }\n      });\n\n      actionDisclosure.on('hide', () => {\n        this.$container.removeClass('active');\n      });\n\n      this.$actionMenuOptions = this.$actionMenu.find('button[data-action]');\n\n      this.addListener(\n        this.$actionMenuOptions,\n        'activate',\n        this.handleActionClick\n      );\n\n      // Was this entry already collapsed?\n      if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n        this.collapse();\n      }\n\n      this._handleTitleBarClick = function (ev) {\n        ev.preventDefault();\n        this.toggle();\n      };\n\n      this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n\n      this.visibleLayoutElements = this.$container.data(\n        'visible-layout-elements'\n      );\n      this.formObserver = new Craft.FormObserver(this.$container, (data) => {\n        this.updateFieldLayout(data);\n      });\n    },\n\n    toggle: function () {\n      if (this.collapsed) {\n        this.expand();\n      } else {\n        this.collapse(true);\n      }\n    },\n\n    collapse: function (animate) {\n      if (this.collapsed) {\n        return;\n      }\n\n      this.$container.addClass('collapsed');\n\n      let previewHtml = '';\n      const $fields = this.$fieldsContainer.children().children();\n\n      for (let i = 0; i < $fields.length; i++) {\n        const $field = $($fields[i]);\n        const $inputs = $field\n          .children('.input')\n          .find('select,input[type!=\"hidden\"],textarea,.label');\n        let inputPreviewText = '';\n\n        for (let j = 0; j < $inputs.length; j++) {\n          const $input = $($inputs[j]);\n          let value;\n\n          if ($input.hasClass('label')) {\n            const $maybeLightswitchContainer = $input.parent().parent();\n\n            if (\n              $maybeLightswitchContainer.hasClass('lightswitch') &&\n              (($maybeLightswitchContainer.hasClass('on') &&\n                $input.hasClass('off')) ||\n                (!$maybeLightswitchContainer.hasClass('on') &&\n                  $input.hasClass('on')))\n            ) {\n              continue;\n            }\n\n            value = $input.text();\n          } else {\n            value = Craft.getText(this._inputPreviewText($input));\n          }\n\n          if (Array.isArray(value)) {\n            value = value.join(', ');\n          }\n\n          if (value) {\n            value = Craft.escapeHtml(value).trim();\n\n            if (value) {\n              if (inputPreviewText) {\n                inputPreviewText += ', ';\n              }\n\n              inputPreviewText += value;\n            }\n          }\n        }\n\n        if (inputPreviewText) {\n          previewHtml +=\n            (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n        }\n      }\n\n      this.$previewContainer.html(previewHtml);\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      if (animate && !Garnish.prefersReducedMotion()) {\n        this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n        this.$container.velocity({height: 34}, 'fast');\n      } else {\n        this.$previewContainer.show();\n        this.$fieldsContainer.hide();\n        this.$container.css({height: 34});\n      }\n\n      this.$tabContainer.hide();\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('button[data-action=collapse]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('button[data-action=expand]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew) {\n        Craft.MatrixInput.rememberCollapsedEntryId(this.id);\n      } else {\n        if (!this.$collapsedInput) {\n          this.$collapsedInput = $(\n            '<input type=\"hidden\" name=\"' +\n              this.matrix.inputNamePrefix +\n              '[entries][' +\n              this.id +\n              '][collapsed]\" value=\"1\"/>'\n          ).appendTo(this.$container);\n        } else {\n          this.$collapsedInput.val('1');\n        }\n      }\n\n      this.collapsed = true;\n    },\n\n    _inputPreviewText: function ($input) {\n      if ($input.is('select,multiselect')) {\n        const labels = [];\n        const $options = $input.find('option:selected');\n        for (let k = 0; k < $options.length; k++) {\n          labels.push($options.eq(k).text());\n        }\n        return labels;\n      }\n\n      if (\n        $input.is('input[type=\"checkbox\"]:checked,input[type=\"radio\"]:checked')\n      ) {\n        const id = $input.attr('id');\n        const $label = $(`label[for=\"${id}\"]`);\n        if ($label.length) {\n          return $label.text();\n        }\n      }\n\n      return Garnish.getInputPostVal($input);\n    },\n\n    expand: function () {\n      if (!this.collapsed) {\n        return;\n      }\n\n      this.$container.removeClass('collapsed');\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      const collapsedContainerHeight = this.$container.height();\n      this.$container.height('auto');\n      this.$fieldsContainer.show();\n      const expandedContainerHeight = this.$container.height();\n      const displayValue = this.$fieldsContainer.css('display') || 'block';\n      this.$container.height(collapsedContainerHeight);\n      this.$fieldsContainer\n        .hide()\n        .velocity('fadeIn', {duration: 'fast', display: displayValue});\n\n      const animationDuration = Garnish.prefersReducedMotion() ? 0 : 'fast';\n      this.$container.velocity(\n        {height: expandedContainerHeight},\n        animationDuration,\n        () => {\n          this.$previewContainer.html('');\n          this.$container.height('auto');\n          this.$container.trigger('scroll');\n          this.$tabContainer.show();\n        }\n      );\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('button[data-action=collapse]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('button[data-action=expand]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew && typeof Storage !== 'undefined') {\n        const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n        const collapsedEntriesIndex = $.inArray('' + this.id, collapsedEntries);\n\n        if (collapsedEntriesIndex !== -1) {\n          collapsedEntries.splice(collapsedEntriesIndex, 1);\n          Craft.MatrixInput.setCollapsedEntryIds(collapsedEntries);\n        }\n      }\n\n      if (!this.isNew) {\n        Craft.MatrixInput.forgetCollapsedEntryId(this.id);\n      } else if (this.$collapsedInput) {\n        this.$collapsedInput.val('');\n      }\n\n      this.collapsed = false;\n    },\n\n    disable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n      this.$container.addClass('disabled-entry');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('button[data-action=disable]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('button[data-action=enable]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      this.collapse(true);\n    },\n\n    enable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n      this.$container.removeClass('disabled-entry');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('button[data-action=disable]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('button[data-action=enable]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n    },\n\n    moveUp: function () {\n      this.matrix.trigger('beforeMoveEntryUp', {\n        entry: this,\n      });\n      let $prev = this.$container.prev('.matrixblock');\n      if ($prev.length) {\n        this.$container.insertBefore($prev);\n        this.matrix.entrySelect.resetItemOrder();\n      }\n      this.matrix.trigger('moveEntryUp', {\n        entry: this,\n      });\n    },\n\n    moveDown: function () {\n      this.matrix.trigger('beforeMoveEntryDown', {\n        entry: this,\n      });\n      let $next = this.$container.next('.matrixblock');\n      if ($next.length) {\n        this.$container.insertAfter($next);\n        this.matrix.entrySelect.resetItemOrder();\n      }\n      this.matrix.trigger('moveEntryDown', {\n        entry: this,\n      });\n    },\n\n    handleActionClick: function (event) {\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    onActionSelect: function (option) {\n      const batchAction =\n          this.matrix.entrySelect.totalSelected > 1 &&\n          this.matrix.entrySelect.isSelected(this.$container),\n        $option = $(option);\n\n      switch ($option.data('action')) {\n        case 'collapse': {\n          if (batchAction) {\n            this.matrix.collapseSelectedEntries();\n          } else {\n            this.collapse(true);\n          }\n\n          break;\n        }\n\n        case 'expand': {\n          if (batchAction) {\n            this.matrix.expandSelectedEntries();\n          } else {\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'disable': {\n          if (batchAction) {\n            this.matrix.disableSelectedEntries();\n          } else {\n            this.disable();\n          }\n\n          break;\n        }\n\n        case 'enable': {\n          if (batchAction) {\n            this.matrix.enableSelectedEntries();\n          } else {\n            this.enable();\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'moveUp': {\n          this.moveUp();\n          break;\n        }\n\n        case 'moveDown': {\n          this.moveDown();\n          break;\n        }\n\n        case 'add': {\n          const type = $option.data('type');\n          this.matrix.addEntry(type, this.$container);\n          break;\n        }\n\n        case 'delete': {\n          if (batchAction) {\n            if (\n              confirm(\n                Craft.t(\n                  'app',\n                  'Are you sure you want to delete the selected entries?'\n                )\n              )\n            ) {\n              this.matrix.deleteSelectedEntries();\n            }\n          } else {\n            this.selfDestruct();\n          }\n\n          break;\n        }\n      }\n\n      this.actionDisclosure.hide();\n    },\n\n    selfDestruct: function () {\n      // Remove any inputs from the form data\n      $('[name]', this.$container).removeAttr('name');\n\n      this.$container.velocity(\n        this.matrix.getHiddenEntryCss(this.$container),\n        'fast',\n        () => {\n          this.$container.remove();\n          this.matrix.updateAddEntryBtn();\n\n          this.matrix.trigger('entryDeleted', {\n            $entry: this.$container,\n          });\n        }\n      );\n    },\n\n    updateFieldLayout(data) {\n      return new Promise((resolve, reject) => {\n        const elementEditor = this.matrix.elementEditor;\n        const baseInputName = this.$container.data('base-input-name');\n\n        // data = data.replace(new RegExp(\n        //   '(^|&)' +\n        //   Craft.escapeRegex(encodeURIComponent(baseInputName + '[')) +\n        //   '(\\\\w+)' +\n        //   Craft.escapeRegex(encodeURIComponent(']')),\n        //   'g'\n        // ), '$1$2');\n\n        // Ignore if we're already submitting the main form\n        if (elementEditor?.submittingForm) {\n          reject('Form already being submitted.');\n          return;\n        }\n\n        if (this.cancelToken) {\n          this.ignoreFailedRequest = true;\n          this.cancelToken.cancel();\n        }\n\n        this.cancelToken = axios.CancelToken.source();\n\n        const extraData = {\n          [Craft.namespaceInputName('visibleLayoutElements', baseInputName)]:\n            this.visibleLayoutElements,\n          [Craft.namespaceInputName('elementType', baseInputName)]:\n            'craft\\\\elements\\\\Entry',\n          [Craft.namespaceInputName('fieldId', baseInputName)]:\n            this.$container.data('field-id'),\n          [Craft.namespaceInputName('sortOrder', baseInputName)]:\n            this.$container.index() + 1,\n          [Craft.namespaceInputName('typeId', baseInputName)]:\n            this.$container.data('type-id'),\n        };\n\n        const ownerId = this.$container.data('owner-id');\n        if (ownerId) {\n          extraData[Craft.namespaceInputName('ownerId', baseInputName)] =\n            ownerId;\n        }\n\n        const selectedTabId = this.$fieldsContainer\n          .children('[data-layout-tab]:not(.hidden)')\n          .data('id');\n        if (selectedTabId) {\n          extraData[Craft.namespaceInputName('selectedTab', baseInputName)] =\n            selectedTabId;\n        }\n\n        data += `&${$.param(extraData)}`;\n\n        Craft.sendActionRequest('POST', 'elements/update-field-layout', {\n          cancelToken: this.cancelToken.token,\n          headers: {\n            'content-type': 'application/x-www-form-urlencoded',\n            'X-Craft-Namespace': baseInputName,\n          },\n          data,\n        })\n          .then((response) => {\n            this._afterUpdateFieldLayout(\n              data,\n              selectedTabId,\n              baseInputName,\n              response\n            );\n            resolve();\n          })\n          .catch((e) => {\n            if (!this.ignoreFailedRequest) {\n              reject(e);\n            }\n            this.ignoreFailedRequest = false;\n          })\n          .finally(() => {\n            this.cancelToken = null;\n          });\n      });\n    },\n\n    async _afterUpdateFieldLayout(\n      data,\n      selectedTabId,\n      baseInputName,\n      response\n    ) {\n      // capture the new selected tab ID, in case it just changed\n      const newSelectedTabId = this.$fieldsContainer\n        .children('[data-layout-tab]:not(.hidden)')\n        .data('id');\n\n      // Update the visible elements\n      let $allTabContainers = $();\n      const visibleLayoutElements = {};\n      let changedElements = false;\n\n      for (const tabInfo of response.data.missingElements) {\n        let $tabContainer = this.$fieldsContainer.children(\n          `[data-layout-tab=\"${tabInfo.uid}\"]`\n        );\n\n        if (!$tabContainer.length) {\n          $tabContainer = $('<div/>', {\n            id: Craft.namespaceId(tabInfo.id, baseInputName),\n            class: 'flex-fields',\n            'data-id': tabInfo.id,\n            'data-layout-tab': tabInfo.uid,\n          });\n          if (tabInfo.id !== selectedTabId) {\n            $tabContainer.addClass('hidden');\n          }\n          $tabContainer.appendTo(this.$fieldsContainer);\n        }\n\n        $allTabContainers = $allTabContainers.add($tabContainer);\n\n        for (const elementInfo of tabInfo.elements) {\n          if (elementInfo.html !== false) {\n            if (!visibleLayoutElements[tabInfo.uid]) {\n              visibleLayoutElements[tabInfo.uid] = [];\n            }\n            visibleLayoutElements[tabInfo.uid].push(elementInfo.uid);\n\n            if (typeof elementInfo.html === 'string') {\n              const $oldElement = $tabContainer.children(\n                `[data-layout-element=\"${elementInfo.uid}\"]`\n              );\n              const $newElement = $(elementInfo.html);\n              if ($oldElement.length) {\n                $oldElement.replaceWith($newElement);\n              } else {\n                $newElement.appendTo($tabContainer);\n              }\n              Craft.initUiElements($newElement);\n              changedElements = true;\n            }\n          } else {\n            const $oldElement = $tabContainer.children(\n              `[data-layout-element=\"${elementInfo.uid}\"]`\n            );\n            if (\n              !$oldElement.length ||\n              !Garnish.hasAttr($oldElement, 'data-layout-element-placeholder')\n            ) {\n              const $placeholder = $('<div/>', {\n                class: 'hidden',\n                'data-layout-element': elementInfo.uid,\n                'data-layout-element-placeholder': '',\n              });\n\n              if ($oldElement.length) {\n                $oldElement.replaceWith($placeholder);\n              } else {\n                $placeholder.appendTo($tabContainer);\n              }\n\n              changedElements = true;\n            }\n          }\n        }\n      }\n\n      // Remove any unused tab content containers\n      // (`[data-layout-tab=\"\"]` == unconditional containers, so ignore those)\n      const $unusedTabContainers = this.$fieldsContainer\n        .children('[data-layout-tab]')\n        .not($allTabContainers)\n        .not('[data-layout-tab=\"\"]');\n      if ($unusedTabContainers.length) {\n        $unusedTabContainers.remove();\n        changedElements = true;\n      }\n\n      // Make the first tab visible if no others are\n      if (!$allTabContainers.filter(':not(.hidden)').length) {\n        $allTabContainers.first().removeClass('hidden');\n      }\n\n      this.visibleLayoutElements = visibleLayoutElements;\n\n      // Update the tabs\n      if (this.tabManager) {\n        this.tabManager.destroy();\n        this.tabManager = null;\n        this.$tabContainer.html('');\n      }\n\n      this.hasTabs = !!response.data.tabs;\n\n      if (this.hasTabs) {\n        this.$tabContainer.append(response.data.tabs);\n        this.tabManager = Craft.MatrixInput.initTabs(this.$tabContainer);\n\n        // was a new tab selected after the request was kicked off?\n        if (\n          selectedTabId &&\n          newSelectedTabId &&\n          selectedTabId !== newSelectedTabId\n        ) {\n          const $newSelectedTab = this.tabManager.$tabs.filter(\n            `[data-id=\"${newSelectedTabId}\"]`\n          );\n          if ($newSelectedTab.length) {\n            // if the new tab is visible - switch to it\n            this.tabManager.selectTab($newSelectedTab);\n          } else {\n            // if the new tab is not visible (e.g. hidden by a condition)\n            // switch to the first tab\n            this.tabManager.selectTab(this.tabManager.$tabs.first());\n          }\n        }\n      }\n\n      await Craft.appendHeadHtml(response.data.headHtml);\n      await Craft.appendBodyHtml(response.data.bodyHtml);\n\n      // re-grab dismissible tips, re-attach listener, hide on re-load\n      this.matrix.elementEditor?.handleDismissibleTips();\n    },\n  });\n})(jQuery);\n","var __WEBPACK_NAMESPACE_OBJECT__ = jQuery;"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","jQuery","$","_addEntry","Craft","MatrixInput","Garnish","Base","extend","id","entryTypes","entryTypesByHandle","inputNamePrefix","inputIdPrefix","showingAddEntryMenu","addEntryBtnGroupWidth","addEntryBtnContainerWidth","$container","$form","$entriesContainer","$addEntryBtnContainer","$addEntryBtn","$addEntryMenuBtn","$statusMessage","entrySort","entrySelect","addingEntry","elementEditor","this","data","init","settings","_this","formatInputId","maxEntries","setSettings","defaults","closest","children","find","entryType","$entries","collapsedEntries","getCollapsedEntryIds","DragSort","axis","filter","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onDragStop","trigger","onSortChange","resetItemOrder","Select","multi","vertical","checkboxMode","$entry","entry","Entry","inArray","collapse","addListener","_callee","_context","addClass","addEntry","removeClass","disclosureMenu","on","_ref2","_callee2","ev","_context2","currentTarget","_x","updateAddEntryBtn","canAddMoreEntries","removeAttr","$items","eq","$actionMenu","parent","attr","updateStatusMessage","message","_this2","empty","setTimeout","text","_callee3","$insertBefore","autofocus","_this$elementEditor","_yield$Craft$sendActi","_this3","_context3","sendActionRequest","fieldId","entryTypeId","ownerId","ownerElementType","siteId","namespace","blockHtml","pause","insertBefore","appendTo","css","getHiddenEntryCss","velocity","opacity","initUiElements","appendHeadHtml","headHtml","appendBodyHtml","bodyHtml","addItems","requestAnimationFrame","_this3$elementEditor","scrollContainerToElement","first","resume","_x2","_x3","_x4","getEntryTypeByHandle","collapseSelectedEntries","callOnSelectedEntries","expandSelectedEntries","disableSelectedEntries","enableSelectedEntries","deleteSelectedEntries","$selectedItems","marginBottom","outerHeight","staticEntries","collapsedEntryStorageKey","systemUid","localStorage","filterArray","split","setCollapsedEntryIds","ids","join","rememberCollapsedEntryId","Storage","forgetCollapsedEntryId","collapsedEntriesIndex","splice","initTabs","container","$tabs","tabManager","Tabs","$menuBtn","preventDefault","href","$tab","$win","$doc","matrix","$titlebar","$tabContainer","$fieldsContainer","$previewContainer","$collapsedInput","actionDisclosure","formObserver","visibleLayoutElements","cancelToken","ignoreFailedRequest","isNew","collapsed","_this4","substring","$actionMenuBtn","DisclosureMenu","$actionMenuOptions","handleActionClick","hasAttr","_handleTitleBarClick","toggle","FormObserver","updateFieldLayout","expand","animate","_this5","previewHtml","$fields","$inputs","inputPreviewText","j","$input","$maybeLightswitchContainer","getText","_inputPreviewText","Array","isArray","escapeHtml","trim","html","prefersReducedMotion","duration","height","show","hide","val","is","labels","$options","k","$label","concat","getInputPostVal","_this6","collapsedContainerHeight","expandedContainerHeight","displayValue","display","animationDuration","disable","_this7","enable","_this8","moveUp","$prev","moveDown","$next","insertAfter","event","onActionSelect","target","option","batchAction","totalSelected","isSelected","$option","confirm","selfDestruct","_this9","remove","_this10","baseInputName","submittingForm","cancel","axios","CancelToken","source","extraData","_defineProperty","namespaceInputName","index","selectedTabId","param","token","headers","response","_afterUpdateFieldLayout","finally","_this11","_callee4","_this11$matrix$elemen","newSelectedTabId","$allTabContainers","_iterator","_step","tabInfo","_iterator2","_step2","elementInfo","$oldElement","$newElement","_$oldElement","$placeholder","$unusedTabContainers","$newSelectedTab","_context4","_createForOfIteratorHelper","missingElements","uid","namespaceId","class","add","elements","replaceWith","not","destroy","hasTabs","tabs","append","selectTab","handleDismissibleTips"],"sourceRoot":""}