{"version":3,"file":"MatrixInput.js","mappings":"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","sources":["webpack:///./MatrixInput.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  /**\n   * Matrix input class\n   */\n  Craft.MatrixInput = Garnish.Base.extend(\n    {\n      id: null,\n      entryTypes: null,\n      entryTypesByHandle: null,\n      inputNamePrefix: null,\n      inputIdPrefix: null,\n\n      showingAddEntryMenu: false,\n      addEntryBtnGroupWidth: null,\n      addEntryBtnContainerWidth: null,\n\n      $container: null,\n      $form: null,\n      $entriesContainer: null,\n      $addEntryBtnContainer: null,\n      $addEntryBtnGroup: null,\n      $addEntryBtnGroupBtns: null,\n      $addEntryMenuBtn: null,\n      $statusMessage: null,\n\n      entrySort: null,\n      entrySelect: null,\n      totalNewEntries: 0,\n\n      init: function (id, entryTypes, inputNamePrefix, settings) {\n        this.id = id;\n        this.entryTypes = entryTypes;\n        this.inputNamePrefix = inputNamePrefix;\n        this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n        // see if settings was actually set to the maxEntriesvalue\n        if (typeof settings === 'number') {\n          settings = {maxEntries: settings};\n        }\n        this.setSettings(settings, Craft.MatrixInput.defaults);\n\n        this.$container = $('#' + this.id);\n        this.$form = this.$container.closest('form');\n        this.$entriesContainer = this.$container.children('.blocks');\n        this.$addEntryBtnContainer = this.$container.children('.buttons');\n        this.$addEntryBtnGroup =\n          this.$addEntryBtnContainer.children('.btngroup');\n        this.$addEntryBtnGroupBtns = this.$addEntryBtnGroup.children('.btn');\n        this.$addEntryMenuBtn = this.$addEntryBtnContainer.children('.menubtn');\n        this.$statusMessage = this.$container.find('[data-status-message]');\n\n        this.$container.data('matrix', this);\n\n        this.setNewEntryBtn();\n\n        this.entryTypesByHandle = {};\n\n        for (let i = 0; i < this.entryTypes.length; i++) {\n          const entryType = this.entryTypes[i];\n          this.entryTypesByHandle[entryType.handle] = entryType;\n        }\n\n        const $entries = this.$entriesContainer.children();\n        const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n\n        this.entrySort = new Garnish.DragSort($entries, {\n          handle: '> .actions > .move',\n          axis: 'y',\n          filter: () => {\n            // Only return all the selected items if the target item is selected\n            if (this.entrySort.$targetItem.hasClass('sel')) {\n              return this.entrySelect.getSelectedItems();\n            } else {\n              return this.entrySort.$targetItem;\n            }\n          },\n          collapseDraggees: true,\n          magnetStrength: 4,\n          helperLagBase: 1.5,\n          helperOpacity: 0.9,\n          onDragStop: () => {\n            this.trigger('entrySortDragStop');\n          },\n          onSortChange: () => {\n            this.entrySelect.resetItemOrder();\n          },\n        });\n\n        this.entrySelect = new Garnish.Select(\n          this.$entriesContainer,\n          $entries,\n          {\n            multi: true,\n            vertical: true,\n            handle: '> .checkbox, > .titlebar',\n            checkboxMode: true,\n          }\n        );\n\n        for (let i = 0; i < $entries.length; i++) {\n          const $entry = $($entries[i]);\n          const entryId = $entry.data('id');\n\n          // Is this a new entry?\n          const newMatch =\n            typeof entryId === 'string' && entryId.match(/new(\\d+)/);\n\n          if (newMatch && newMatch[1] > this.totalNewEntries) {\n            this.totalNewEntries = parseInt(newMatch[1]);\n          }\n\n          const entry = new Entry(this, $entry);\n\n          if (entry.id && $.inArray('' + entry.id, collapsedEntries) !== -1) {\n            entry.collapse();\n          }\n        }\n\n        this.addListener(this.$addEntryBtnGroupBtns, 'click', function (ev) {\n          const type = $(ev.target).data('type');\n          this.addEntry(type);\n        });\n\n        if (this.$addEntryMenuBtn.length) {\n          this.$addEntryMenuBtn.menubtn();\n          this.$addEntryMenuBtn.data('menubtn').on('optionSelect', (ev) => {\n            this.addEntry($(ev.option).data('type'));\n          });\n        }\n\n        this.updateAddEntryBtn();\n\n        this.addListener(this.$container, 'resize', 'setNewEntryBtn');\n        Garnish.$doc.ready(this.setNewEntryBtn.bind(this));\n\n        this.trigger('afterInit');\n      },\n\n      setNewEntryBtn: function () {\n        // Do we know what the button group width is yet?\n        if (!this.addEntryBtnGroupWidth) {\n          this.addEntryBtnGroupWidth = this.$addEntryBtnGroup.width();\n\n          if (!this.addEntryBtnGroupWidth) {\n            return;\n          }\n        }\n\n        // Only check if the container width has resized\n        if (\n          this.addEntryBtnContainerWidth !==\n          (this.addEntryBtnContainerWidth = this.$addEntryBtnContainer.width())\n        ) {\n          if (this.addEntryBtnGroupWidth > this.addEntryBtnContainerWidth) {\n            if (!this.showingAddEntryMenu) {\n              this.$addEntryBtnGroup.addClass('hidden');\n              this.$addEntryMenuBtn.removeClass('hidden');\n              this.showingAddEntryMenu = true;\n            }\n          } else {\n            if (this.showingAddEntryMenu) {\n              this.$addEntryMenuBtn.addClass('hidden');\n              this.$addEntryBtnGroup.removeClass('hidden');\n              this.showingAddEntryMenu = false;\n\n              // Because Safari is awesome\n              if (navigator.userAgent.indexOf('Safari') !== -1) {\n                Garnish.requestAnimationFrame(() => {\n                  this.$addEntryBtnGroup.css('opacity', 0.99);\n\n                  Garnish.requestAnimationFrame(() => {\n                    this.$addEntryBtnGroup.css('opacity', '');\n                  });\n                });\n              }\n            }\n          }\n        }\n      },\n\n      canAddMoreEntries: function () {\n        return (\n          !this.maxEntries ||\n          this.$entriesContainer.children().length < this.maxEntries\n        );\n      },\n\n      updateAddEntryBtn: function () {\n        if (this.canAddMoreEntries()) {\n          this.$addEntryBtnGroup.removeClass('disabled');\n          this.$addEntryMenuBtn.removeClass('disabled');\n\n          this.$addEntryBtnGroupBtns.each(function () {\n            $(this).removeAttr('aria-disabled');\n          });\n\n          for (let i = 0; i < this.entrySelect.$items.length; i++) {\n            const entry = this.entrySelect.$items.eq(i).data('entry');\n\n            if (entry) {\n              entry.$actionMenu\n                .find('a[data-action=add]')\n                .parent()\n                .removeClass('disabled');\n              entry.$actionMenu\n                .find('a[data-action=add]')\n                .removeAttr('aria-disabled');\n            }\n          }\n        } else {\n          this.$addEntryBtnGroup.addClass('disabled');\n          this.$addEntryMenuBtn.addClass('disabled');\n\n          this.$addEntryBtnGroupBtns.each(function () {\n            $(this).attr('aria-disabled', 'true');\n          });\n\n          for (let i = 0; i < this.entrySelect.$items.length; i++) {\n            const entry = this.entrySelect.$items.eq(i).data('entry');\n\n            if (entry) {\n              entry.$actionMenu\n                .find('a[data-action=add]')\n                .parent()\n                .addClass('disabled');\n              entry.$actionMenu\n                .find('a[data-action=add]')\n                .attr('aria-disabled', 'true');\n            }\n          }\n        }\n      },\n\n      updateStatusMessage: function () {\n        this.$statusMessage.empty();\n        let message;\n\n        if (!this.canAddMoreEntries()) {\n          message = Craft.t(\n            'app',\n            'Entry could not be added. Maximum number of entries reached.'\n          );\n        }\n\n        setTimeout(() => {\n          this.$statusMessage.text(message);\n        }, 250);\n      },\n\n      addEntry: function (type, $insertBefore, autofocus) {\n        if (!this.canAddMoreEntries()) {\n          this.updateStatusMessage();\n          return;\n        }\n\n        this.totalNewEntries++;\n\n        const id = `new${this.totalNewEntries}`;\n        const typeName = this.entryTypesByHandle[type].name;\n        const actionMenuId = `matrixblock-action-menu-${id}`;\n\n        let html = `\n                <div class=\"matrixblock\" data-id=\"${id}\" data-type=\"${type}\" data-type-name=\"${typeName}\" role=\"listitem\">\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[sortOrder][]\" value=\"${id}\"/>\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[entries][${id}][type]\" value=\"${type}\"/>\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[entries][${id}][enabled]\" value=\"1\"/>\n                  <div class=\"titlebar\">\n                    <div class=\"entrytype\">${\n                      this.getEntryTypeByHandle(type).name\n                    }</div>\n                    <div class=\"preview\"></div>\n                  </div>\n                  <div class=\"checkbox\" title=\"${Craft.t(\n                    'app',\n                    'Select'\n                  )}\"></div>\n                  <div class=\"actions\">\n                    <div class=\"status off\" title=\"${Craft.t(\n                      'app',\n                      'Disabled'\n                    )}\"></div>\n                    <div>\n                      <button type=\"button\" class=\"btn settings icon menubtn\" title=\"${Craft.t(\n                        'app',\n                        'Actions'\n                      )}\" aria-controls=\"${actionMenuId}\" data-disclosure-trigger></button>\n                        <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\">\n                         <ul class=\"padded\">\n                            <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Collapse'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Collapse'\n        )}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Expand'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Expand'\n        )}</a></li>\n                            <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Disable'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Disable'\n        )}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Enable'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Enable'\n        )}</a></li>\n                            <li><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Move up'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Move up'\n        )}</a></li>\n                            <li><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Move down'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Move down'\n        )}</a></li>\n                          </ul>`;\n\n        if (!this.settings.staticEntries) {\n          html += `\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">\n                            <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Delete'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n            'app',\n            'Delete'\n          )}</a></li>\n                          </ul>\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">`;\n\n          for (let i = 0; i < this.entryTypes.length; i++) {\n            const entryType = this.entryTypes[i];\n            html += `\n                            <li><a data-icon=\"plus\" data-action=\"add\" data-type=\"${\n                              entryType.handle\n                            }\" href=\"#\" aria-label=\"${Craft.t(\n              'app',\n              'Add {type} above',\n              {type: entryType.name}\n            )}\" type=\"button\" role=\"button\">${Craft.t(\n              'app',\n              'Add {type} above',\n              {type: entryType.name}\n            )}</a></li>`;\n          }\n\n          html += `\n                          </ul>`;\n        }\n\n        html += `\n                        </div>\n                      </div>\n                    <a class=\"move icon\" title=\"${Craft.t(\n                      'app',\n                      'Reorder'\n                    )}\" role=\"button\"></a>\n                  </div>\n                </div>`;\n\n        const $entry = $(html);\n\n        // Pause the draft editor\n        const elementEditor = this.$form.data('elementEditor');\n        if (elementEditor) {\n          elementEditor.pause();\n        }\n\n        if ($insertBefore) {\n          $entry.insertBefore($insertBefore);\n        } else {\n          $entry.appendTo(this.$entriesContainer);\n        }\n\n        const $fieldsContainer = $('<div class=\"fields\"/>').appendTo($entry);\n        const bodyHtml = this.getParsedEntryHtml(\n            this.entryTypesByHandle[type].bodyHtml,\n            id\n          ),\n          js = this.getParsedEntryHtml(this.entryTypesByHandle[type].js, id);\n\n        $(bodyHtml).appendTo($fieldsContainer);\n\n        this.trigger('entryAdded', {\n          $entry: $entry,\n        });\n\n        // Animate the entry into position\n        $entry.css(this.getHiddenEntryCss($entry)).velocity(\n          {\n            opacity: 1,\n            'margin-bottom': 10,\n          },\n          'fast',\n          () => {\n            $entry.css('margin-bottom', '');\n            Garnish.$bod.append(js);\n            Craft.initUiElements($fieldsContainer);\n            new Entry(this, $entry);\n            this.entrySort.addItems($entry);\n            this.entrySelect.addItems($entry);\n            this.updateAddEntryBtn();\n\n            Garnish.requestAnimationFrame(() => {\n              if (typeof autofocus === 'undefined' || autofocus) {\n                // Scroll to the entry\n                Garnish.scrollContainerToElement($entry);\n                // Focus on the first focusable element\n                $entry.find('.flex-fields :focusable').first().trigger('focus');\n              }\n\n              // Resume the draft editor\n              if (elementEditor) {\n                elementEditor.resume();\n              }\n            });\n          }\n        );\n      },\n\n      getEntryTypeByHandle: function (handle) {\n        for (let i = 0; i < this.entryTypes.length; i++) {\n          if (this.entryTypes[i].handle === handle) {\n            return this.entryTypes[i];\n          }\n        }\n      },\n\n      collapseSelectedEntries: function () {\n        this.callOnSelectedEntries('collapse');\n      },\n\n      expandSelectedEntries: function () {\n        this.callOnSelectedEntries('expand');\n      },\n\n      disableSelectedEntries: function () {\n        this.callOnSelectedEntries('disable');\n      },\n\n      enableSelectedEntries: function () {\n        this.callOnSelectedEntries('enable');\n      },\n\n      deleteSelectedEntries: function () {\n        this.callOnSelectedEntries('selfDestruct');\n      },\n\n      callOnSelectedEntries: function (fn) {\n        for (let i = 0; i < this.entrySelect.$selectedItems.length; i++) {\n          this.entrySelect.$selectedItems.eq(i).data('entry')[fn]();\n        }\n      },\n\n      getHiddenEntryCss: function ($entry) {\n        return {\n          opacity: 0,\n          marginBottom: -$entry.outerHeight(),\n        };\n      },\n\n      getParsedEntryHtml: function (html, id) {\n        if (typeof html === 'string') {\n          return html.replace(\n            new RegExp(`__ENTRY_${this.settings.placeholderKey}__`, 'g'),\n            id\n          );\n        } else {\n          return '';\n        }\n      },\n\n      get maxEntries() {\n        return this.settings.maxEntries;\n      },\n    },\n    {\n      defaults: {\n        placeholderKey: null,\n        maxEntries: null,\n        staticEntries: false,\n      },\n\n      collapsedEntryStorageKey:\n        'Craft-' + Craft.systemUid + '.MatrixInput.collapsedEntries',\n\n      getCollapsedEntryIds: function () {\n        if (\n          typeof localStorage[Craft.MatrixInput.collapsedEntryStorageKey] ===\n          'string'\n        ) {\n          return Craft.filterArray(\n            localStorage[Craft.MatrixInput.collapsedEntryStorageKey].split(',')\n          );\n        } else {\n          return [];\n        }\n      },\n\n      setCollapsedEntryIds: function (ids) {\n        localStorage[Craft.MatrixInput.collapsedEntryStorageKey] =\n          ids.join(',');\n      },\n\n      rememberCollapsedEntryId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n\n          if ($.inArray('' + id, collapsedEntries) === -1) {\n            collapsedEntries.push(id);\n            Craft.MatrixInput.setCollapsedEntryIds(collapsedEntries);\n          }\n        }\n      },\n\n      forgetCollapsedEntryId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n          const collapsedEntriesIndex = $.inArray('' + id, collapsedEntries);\n\n          if (collapsedEntriesIndex !== -1) {\n            collapsedEntries.splice(collapsedEntriesIndex, 1);\n            Craft.MatrixInput.setCollapsedEntryIds(collapsedEntries);\n          }\n        }\n      },\n    }\n  );\n\n  const Entry = Garnish.Base.extend({\n    matrix: null,\n    $container: null,\n    $titlebar: null,\n    $fieldsContainer: null,\n    $previewContainer: null,\n    $actionMenu: null,\n    $collapsedInput: null,\n\n    actionDisclosure: null,\n\n    isNew: null,\n    id: null,\n\n    collapsed: false,\n\n    init: function (matrix, $container) {\n      this.matrix = matrix;\n      this.$container = $container;\n      this.$titlebar = $container.children('.titlebar');\n      this.$previewContainer = this.$titlebar.children('.preview');\n      this.$fieldsContainer = $container.children('.fields');\n\n      this.$container.data('entry', this);\n\n      this.id = this.$container.data('id');\n      this.isNew =\n        !this.id ||\n        (typeof this.id === 'string' && this.id.substring(0, 3) === 'new');\n\n      const $actionMenuBtn = this.$container.find(\n        '> .actions [data-disclosure-trigger]'\n      );\n      const actionDisclosure =\n        $actionMenuBtn.data('trigger') ||\n        new Garnish.DisclosureMenu($actionMenuBtn);\n\n      this.$actionMenu = actionDisclosure.$container;\n      this.actionDisclosure = actionDisclosure;\n\n      actionDisclosure.on('show', () => {\n        this.$container.addClass('active');\n        if (this.$container.prev('.matrixblock').length) {\n          this.$actionMenu\n            .find('a[data-action=moveUp]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('a[data-action=moveUp]:first')\n            .parent()\n            .addClass('hidden');\n        }\n        if (this.$container.next('.matrixblock').length) {\n          this.$actionMenu\n            .find('a[data-action=moveDown]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('a[data-action=moveDown]:first')\n            .parent()\n            .addClass('hidden');\n        }\n      });\n\n      actionDisclosure.on('hide', () => {\n        this.$container.removeClass('active');\n      });\n\n      this.$actionMenuOptions = this.$actionMenu.find('a[data-action]');\n\n      this.addListener(\n        this.$actionMenuOptions,\n        'click',\n        this.handleActionClick\n      );\n      this.addListener(\n        this.$actionMenuOptions,\n        'keydown',\n        this.handleActionKeydown\n      );\n\n      // Was this entry already collapsed?\n      if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n        this.collapse();\n      }\n\n      this._handleTitleBarClick = function (ev) {\n        ev.preventDefault();\n        this.toggle();\n      };\n\n      this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n    },\n\n    toggle: function () {\n      if (this.collapsed) {\n        this.expand();\n      } else {\n        this.collapse(true);\n      }\n    },\n\n    collapse: function (animate) {\n      if (this.collapsed) {\n        return;\n      }\n\n      this.$container.addClass('collapsed');\n\n      let previewHtml = '';\n      const $fields = this.$fieldsContainer.children().children();\n\n      for (let i = 0; i < $fields.length; i++) {\n        const $field = $($fields[i]);\n        const $inputs = $field\n          .children('.input')\n          .find('select,input[type!=\"hidden\"],textarea,.label');\n        let inputPreviewText = '';\n\n        for (let j = 0; j < $inputs.length; j++) {\n          const $input = $($inputs[j]);\n          let value;\n\n          if ($input.hasClass('label')) {\n            const $maybeLightswitchContainer = $input.parent().parent();\n\n            if (\n              $maybeLightswitchContainer.hasClass('lightswitch') &&\n              (($maybeLightswitchContainer.hasClass('on') &&\n                $input.hasClass('off')) ||\n                (!$maybeLightswitchContainer.hasClass('on') &&\n                  $input.hasClass('on')))\n            ) {\n              continue;\n            }\n\n            value = $input.text();\n          } else {\n            value = Craft.getText(this._inputPreviewText($input));\n          }\n\n          if (Array.isArray(value)) {\n            value = value.join(', ');\n          }\n\n          if (value) {\n            value = Craft.trim(Craft.escapeHtml(value));\n\n            if (value) {\n              if (inputPreviewText) {\n                inputPreviewText += ', ';\n              }\n\n              inputPreviewText += value;\n            }\n          }\n        }\n\n        if (inputPreviewText) {\n          previewHtml +=\n            (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n        }\n      }\n\n      this.$previewContainer.html(previewHtml);\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      if (animate && !Garnish.prefersReducedMotion()) {\n        this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n        this.$container.velocity({height: 32}, 'fast');\n      } else {\n        this.$previewContainer.show();\n        this.$fieldsContainer.hide();\n        this.$container.css({height: 32});\n      }\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=collapse]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=expand]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew) {\n        Craft.MatrixInput.rememberCollapsedEntryId(this.id);\n      } else {\n        if (!this.$collapsedInput) {\n          this.$collapsedInput = $(\n            '<input type=\"hidden\" name=\"' +\n              this.matrix.inputNamePrefix +\n              '[entries][' +\n              this.id +\n              '][collapsed]\" value=\"1\"/>'\n          ).appendTo(this.$container);\n        } else {\n          this.$collapsedInput.val('1');\n        }\n      }\n\n      this.collapsed = true;\n    },\n\n    _inputPreviewText: function ($input) {\n      if ($input.is('select,multiselect')) {\n        const labels = [];\n        const $options = $input.find('option:selected');\n        for (let k = 0; k < $options.length; k++) {\n          labels.push($options.eq(k).text());\n        }\n        return labels;\n      }\n\n      if (\n        $input.is('input[type=\"checkbox\"]:checked,input[type=\"radio\"]:checked')\n      ) {\n        const id = $input.attr('id');\n        const $label = $(`label[for=\"${id}\"]`);\n        if ($label.length) {\n          return $label.text();\n        }\n      }\n\n      return Garnish.getInputPostVal($input);\n    },\n\n    expand: function () {\n      if (!this.collapsed) {\n        return;\n      }\n\n      this.$container.removeClass('collapsed');\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      const collapsedContainerHeight = this.$container.height();\n      this.$container.height('auto');\n      this.$fieldsContainer.show();\n      const expandedContainerHeight = this.$container.height();\n      const displayValue = this.$fieldsContainer.css('display') || 'block';\n      this.$container.height(collapsedContainerHeight);\n      this.$fieldsContainer\n        .hide()\n        .velocity('fadeIn', {duration: 'fast', display: displayValue});\n\n      const animationDuration = Garnish.prefersReducedMotion() ? 0 : 'fast';\n      this.$container.velocity(\n        {height: expandedContainerHeight},\n        animationDuration,\n        () => {\n          this.$previewContainer.html('');\n          this.$container.height('auto');\n          this.$container.trigger('scroll');\n        }\n      );\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=collapse]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=expand]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew && typeof Storage !== 'undefined') {\n        const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n        const collapsedEntriesIndex = $.inArray('' + this.id, collapsedEntries);\n\n        if (collapsedEntriesIndex !== -1) {\n          collapsedEntries.splice(collapsedEntriesIndex, 1);\n          Craft.MatrixInput.setCollapsedEntryIds(collapsedEntries);\n        }\n      }\n\n      if (!this.isNew) {\n        Craft.MatrixInput.forgetCollapsedEntryId(this.id);\n      } else if (this.$collapsedInput) {\n        this.$collapsedInput.val('');\n      }\n\n      this.collapsed = false;\n    },\n\n    disable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n      this.$container.addClass('disabled');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=disable]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=enable]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      this.collapse(true);\n    },\n\n    enable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n      this.$container.removeClass('disabled');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=disable]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=enable]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n    },\n\n    moveUp: function () {\n      this.matrix.trigger('beforeMoveEntryUp', {\n        entry: this,\n      });\n      let $prev = this.$container.prev('.matrixblock');\n      if ($prev.length) {\n        this.$container.insertBefore($prev);\n        this.matrix.entrySelect.resetItemOrder();\n      }\n      this.matrix.trigger('moveEntryUp', {\n        entry: this,\n      });\n    },\n\n    moveDown: function () {\n      this.matrix.trigger('beforeMoveEntryDown', {\n        entry: this,\n      });\n      let $next = this.$container.next('.matrixblock');\n      if ($next.length) {\n        this.$container.insertAfter($next);\n        this.matrix.entrySelect.resetItemOrder();\n      }\n      this.matrix.trigger('moveEntryDown', {\n        entry: this,\n      });\n    },\n\n    handleActionClick: function (event) {\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    handleActionKeydown: function (event) {\n      const keyCode = event.keyCode;\n\n      if (keyCode !== Garnish.SPACE_KEY) return;\n\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    onActionSelect: function (option) {\n      const batchAction =\n          this.matrix.entrySelect.totalSelected > 1 &&\n          this.matrix.entrySelect.isSelected(this.$container),\n        $option = $(option);\n\n      switch ($option.data('action')) {\n        case 'collapse': {\n          if (batchAction) {\n            this.matrix.collapseSelectedEntries();\n          } else {\n            this.collapse(true);\n          }\n\n          break;\n        }\n\n        case 'expand': {\n          if (batchAction) {\n            this.matrix.expandSelectedEntries();\n          } else {\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'disable': {\n          if (batchAction) {\n            this.matrix.disableSelectedEntries();\n          } else {\n            this.disable();\n          }\n\n          break;\n        }\n\n        case 'enable': {\n          if (batchAction) {\n            this.matrix.enableSelectedEntries();\n          } else {\n            this.enable();\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'moveUp': {\n          this.moveUp();\n          break;\n        }\n\n        case 'moveDown': {\n          this.moveDown();\n          break;\n        }\n\n        case 'add': {\n          const type = $option.data('type');\n          this.matrix.addEntry(type, this.$container);\n          break;\n        }\n\n        case 'delete': {\n          if (batchAction) {\n            if (\n              confirm(\n                Craft.t(\n                  'app',\n                  'Are you sure you want to delete the selected entries?'\n                )\n              )\n            ) {\n              this.matrix.deleteSelectedEntries();\n            }\n          } else {\n            this.selfDestruct();\n          }\n\n          break;\n        }\n      }\n\n      this.actionDisclosure.hide();\n    },\n\n    selfDestruct: function () {\n      // Remove any inputs from the form data\n      $('[name]', this.$container).removeAttr('name');\n\n      this.$container.velocity(\n        this.matrix.getHiddenEntryCss(this.$container),\n        'fast',\n        () => {\n          this.$container.remove();\n          this.matrix.updateAddEntryBtn();\n\n          this.matrix.trigger('entryDeleted', {\n            $entry: this.$container,\n          });\n        }\n      );\n    },\n  });\n})(jQuery);\n"],"names":["$","Craft","MatrixInput","Garnish","Base","extend","id","entryTypes","entryTypesByHandle","inputNamePrefix","inputIdPrefix","showingAddEntryMenu","addEntryBtnGroupWidth","addEntryBtnContainerWidth","$container","$form","$entriesContainer","$addEntryBtnContainer","$addEntryBtnGroup","$addEntryBtnGroupBtns","$addEntryMenuBtn","$statusMessage","entrySort","entrySelect","totalNewEntries","init","settings","this","formatInputId","maxEntries","setSettings","defaults","closest","children","find","data","setNewEntryBtn","i","length","entryType","handle","$entries","collapsedEntries","getCollapsedEntryIds","DragSort","axis","filter","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onDragStop","trigger","onSortChange","resetItemOrder","Select","multi","vertical","checkboxMode","$entry","entryId","newMatch","match","parseInt","entry","Entry","inArray","collapse","addListener","ev","type","target","addEntry","menubtn","on","option","updateAddEntryBtn","$doc","ready","bind","width","addClass","removeClass","navigator","userAgent","indexOf","requestAnimationFrame","css","canAddMoreEntries","each","removeAttr","$items","eq","$actionMenu","parent","attr","updateStatusMessage","message","empty","t","setTimeout","text","$insertBefore","autofocus","typeName","name","actionMenuId","html","getEntryTypeByHandle","staticEntries","elementEditor","pause","insertBefore","appendTo","$fieldsContainer","bodyHtml","getParsedEntryHtml","js","getHiddenEntryCss","velocity","opacity","$bod","append","initUiElements","addItems","scrollContainerToElement","first","resume","collapseSelectedEntries","callOnSelectedEntries","expandSelectedEntries","disableSelectedEntries","enableSelectedEntries","deleteSelectedEntries","fn","$selectedItems","marginBottom","outerHeight","replace","RegExp","placeholderKey","collapsedEntryStorageKey","systemUid","localStorage","filterArray","split","setCollapsedEntryIds","ids","join","rememberCollapsedEntryId","Storage","push","forgetCollapsedEntryId","collapsedEntriesIndex","splice","matrix","$titlebar","$previewContainer","$collapsedInput","actionDisclosure","isNew","collapsed","substring","$actionMenuBtn","DisclosureMenu","prev","next","$actionMenuOptions","handleActionClick","handleActionKeydown","hasAttr","_handleTitleBarClick","preventDefault","toggle","expand","animate","previewHtml","$fields","$inputs","inputPreviewText","j","$input","value","$maybeLightswitchContainer","getText","_inputPreviewText","Array","isArray","trim","escapeHtml","prefersReducedMotion","duration","height","show","hide","val","is","labels","$options","k","$label","getInputPostVal","collapsedContainerHeight","expandedContainerHeight","displayValue","display","animationDuration","disable","enable","moveUp","$prev","moveDown","$next","insertAfter","event","onActionSelect","keyCode","SPACE_KEY","batchAction","totalSelected","isSelected","$option","confirm","selfDestruct","remove","jQuery"],"sourceRoot":""}